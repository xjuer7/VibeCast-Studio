/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst checkAuth_1 = __webpack_require__(/*! ./src/view/comps/checkAuth */ \"./src/view/comps/checkAuth.ts\");\n(0, checkAuth_1.checkAuth)();\n\n\n//# sourceURL=webpack://frontend/./index.ts?\n}");

/***/ }),

/***/ "./node_modules/axios/dist/browser/axios.cjs":
/*!***************************************************!*\
  !*** ./node_modules/axios/dist/browser/axios.cjs ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";
eval("{/*! Axios v1.11.0 Copyright (c) 2025 Matt Zabriskie and contributors */\n\n\nfunction bind(fn, thisArg) {\n  return function wrap() {\n    return fn.apply(thisArg, arguments);\n  };\n}\n\n// utils is a library of generic helper functions non-specific to axios\n\nconst {toString} = Object.prototype;\nconst {getPrototypeOf} = Object;\nconst {iterator, toStringTag} = Symbol;\n\nconst kindOf = (cache => thing => {\n    const str = toString.call(thing);\n    return cache[str] || (cache[str] = str.slice(8, -1).toLowerCase());\n})(Object.create(null));\n\nconst kindOfTest = (type) => {\n  type = type.toLowerCase();\n  return (thing) => kindOf(thing) === type\n};\n\nconst typeOfTest = type => thing => typeof thing === type;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n *\n * @returns {boolean} True if value is an Array, otherwise false\n */\nconst {isArray} = Array;\n\n/**\n * Determine if a value is undefined\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nconst isUndefined = typeOfTest('undefined');\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && isFunction(val.constructor.isBuffer) && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nconst isArrayBuffer = kindOfTest('ArrayBuffer');\n\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  let result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (isArrayBuffer(val.buffer));\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a String, otherwise false\n */\nconst isString = typeOfTest('string');\n\n/**\n * Determine if a value is a Function\n *\n * @param {*} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nconst isFunction = typeOfTest('function');\n\n/**\n * Determine if a value is a Number\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Number, otherwise false\n */\nconst isNumber = typeOfTest('number');\n\n/**\n * Determine if a value is an Object\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an Object, otherwise false\n */\nconst isObject = (thing) => thing !== null && typeof thing === 'object';\n\n/**\n * Determine if a value is a Boolean\n *\n * @param {*} thing The value to test\n * @returns {boolean} True if value is a Boolean, otherwise false\n */\nconst isBoolean = thing => thing === true || thing === false;\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a plain Object, otherwise false\n */\nconst isPlainObject = (val) => {\n  if (kindOf(val) !== 'object') {\n    return false;\n  }\n\n  const prototype = getPrototypeOf(val);\n  return (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(toStringTag in val) && !(iterator in val);\n};\n\n/**\n * Determine if a value is an empty object (safely handles Buffers)\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is an empty object, otherwise false\n */\nconst isEmptyObject = (val) => {\n  // Early return for non-objects or Buffers to prevent RangeError\n  if (!isObject(val) || isBuffer(val)) {\n    return false;\n  }\n  \n  try {\n    return Object.keys(val).length === 0 && Object.getPrototypeOf(val) === Object.prototype;\n  } catch (e) {\n    // Fallback for any other objects that might cause RangeError with Object.keys()\n    return false;\n  }\n};\n\n/**\n * Determine if a value is a Date\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Date, otherwise false\n */\nconst isDate = kindOfTest('Date');\n\n/**\n * Determine if a value is a File\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFile = kindOfTest('File');\n\n/**\n * Determine if a value is a Blob\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nconst isBlob = kindOfTest('Blob');\n\n/**\n * Determine if a value is a FileList\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a File, otherwise false\n */\nconst isFileList = kindOfTest('FileList');\n\n/**\n * Determine if a value is a Stream\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nconst isStream = (val) => isObject(val) && isFunction(val.pipe);\n\n/**\n * Determine if a value is a FormData\n *\n * @param {*} thing The value to test\n *\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nconst isFormData = (thing) => {\n  let kind;\n  return thing && (\n    (typeof FormData === 'function' && thing instanceof FormData) || (\n      isFunction(thing.append) && (\n        (kind = kindOf(thing)) === 'formdata' ||\n        // detect form-data instance\n        (kind === 'object' && isFunction(thing.toString) && thing.toString() === '[object FormData]')\n      )\n    )\n  )\n};\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nconst isURLSearchParams = kindOfTest('URLSearchParams');\n\nconst [isReadableStream, isRequest, isResponse, isHeaders] = ['ReadableStream', 'Request', 'Response', 'Headers'].map(kindOfTest);\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n *\n * @returns {String} The String freed of excess whitespace\n */\nconst trim = (str) => str.trim ?\n  str.trim() : str.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, '');\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n *\n * @param {Boolean} [allOwnKeys = false]\n * @returns {any}\n */\nfunction forEach(obj, fn, {allOwnKeys = false} = {}) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  let i;\n  let l;\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Buffer check\n    if (isBuffer(obj)) {\n      return;\n    }\n\n    // Iterate over object keys\n    const keys = allOwnKeys ? Object.getOwnPropertyNames(obj) : Object.keys(obj);\n    const len = keys.length;\n    let key;\n\n    for (i = 0; i < len; i++) {\n      key = keys[i];\n      fn.call(null, obj[key], key, obj);\n    }\n  }\n}\n\nfunction findKey(obj, key) {\n  if (isBuffer(obj)){\n    return null;\n  }\n\n  key = key.toLowerCase();\n  const keys = Object.keys(obj);\n  let i = keys.length;\n  let _key;\n  while (i-- > 0) {\n    _key = keys[i];\n    if (key === _key.toLowerCase()) {\n      return _key;\n    }\n  }\n  return null;\n}\n\nconst _global = (() => {\n  /*eslint no-undef:0*/\n  if (typeof globalThis !== \"undefined\") return globalThis;\n  return typeof self !== \"undefined\" ? self : (typeof window !== 'undefined' ? window : __webpack_require__.g)\n})();\n\nconst isContextDefined = (context) => !isUndefined(context) && context !== _global;\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n *\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  const {caseless} = isContextDefined(this) && this || {};\n  const result = {};\n  const assignValue = (val, key) => {\n    const targetKey = caseless && findKey(result, key) || key;\n    if (isPlainObject(result[targetKey]) && isPlainObject(val)) {\n      result[targetKey] = merge(result[targetKey], val);\n    } else if (isPlainObject(val)) {\n      result[targetKey] = merge({}, val);\n    } else if (isArray(val)) {\n      result[targetKey] = val.slice();\n    } else {\n      result[targetKey] = val;\n    }\n  };\n\n  for (let i = 0, l = arguments.length; i < l; i++) {\n    arguments[i] && forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n *\n * @param {Boolean} [allOwnKeys]\n * @returns {Object} The resulting value of object a\n */\nconst extend = (a, b, thisArg, {allOwnKeys}= {}) => {\n  forEach(b, (val, key) => {\n    if (thisArg && isFunction(val)) {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  }, {allOwnKeys});\n  return a;\n};\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n *\n * @returns {string} content value without BOM\n */\nconst stripBOM = (content) => {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n};\n\n/**\n * Inherit the prototype methods from one constructor into another\n * @param {function} constructor\n * @param {function} superConstructor\n * @param {object} [props]\n * @param {object} [descriptors]\n *\n * @returns {void}\n */\nconst inherits = (constructor, superConstructor, props, descriptors) => {\n  constructor.prototype = Object.create(superConstructor.prototype, descriptors);\n  constructor.prototype.constructor = constructor;\n  Object.defineProperty(constructor, 'super', {\n    value: superConstructor.prototype\n  });\n  props && Object.assign(constructor.prototype, props);\n};\n\n/**\n * Resolve object with deep prototype chain to a flat object\n * @param {Object} sourceObj source object\n * @param {Object} [destObj]\n * @param {Function|Boolean} [filter]\n * @param {Function} [propFilter]\n *\n * @returns {Object}\n */\nconst toFlatObject = (sourceObj, destObj, filter, propFilter) => {\n  let props;\n  let i;\n  let prop;\n  const merged = {};\n\n  destObj = destObj || {};\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  if (sourceObj == null) return destObj;\n\n  do {\n    props = Object.getOwnPropertyNames(sourceObj);\n    i = props.length;\n    while (i-- > 0) {\n      prop = props[i];\n      if ((!propFilter || propFilter(prop, sourceObj, destObj)) && !merged[prop]) {\n        destObj[prop] = sourceObj[prop];\n        merged[prop] = true;\n      }\n    }\n    sourceObj = filter !== false && getPrototypeOf(sourceObj);\n  } while (sourceObj && (!filter || filter(sourceObj, destObj)) && sourceObj !== Object.prototype);\n\n  return destObj;\n};\n\n/**\n * Determines whether a string ends with the characters of a specified string\n *\n * @param {String} str\n * @param {String} searchString\n * @param {Number} [position= 0]\n *\n * @returns {boolean}\n */\nconst endsWith = (str, searchString, position) => {\n  str = String(str);\n  if (position === undefined || position > str.length) {\n    position = str.length;\n  }\n  position -= searchString.length;\n  const lastIndex = str.indexOf(searchString, position);\n  return lastIndex !== -1 && lastIndex === position;\n};\n\n\n/**\n * Returns new array from array like object or null if failed\n *\n * @param {*} [thing]\n *\n * @returns {?Array}\n */\nconst toArray = (thing) => {\n  if (!thing) return null;\n  if (isArray(thing)) return thing;\n  let i = thing.length;\n  if (!isNumber(i)) return null;\n  const arr = new Array(i);\n  while (i-- > 0) {\n    arr[i] = thing[i];\n  }\n  return arr;\n};\n\n/**\n * Checking if the Uint8Array exists and if it does, it returns a function that checks if the\n * thing passed in is an instance of Uint8Array\n *\n * @param {TypedArray}\n *\n * @returns {Array}\n */\n// eslint-disable-next-line func-names\nconst isTypedArray = (TypedArray => {\n  // eslint-disable-next-line func-names\n  return thing => {\n    return TypedArray && thing instanceof TypedArray;\n  };\n})(typeof Uint8Array !== 'undefined' && getPrototypeOf(Uint8Array));\n\n/**\n * For each entry in the object, call the function with the key and value.\n *\n * @param {Object<any, any>} obj - The object to iterate over.\n * @param {Function} fn - The function to call for each entry.\n *\n * @returns {void}\n */\nconst forEachEntry = (obj, fn) => {\n  const generator = obj && obj[iterator];\n\n  const _iterator = generator.call(obj);\n\n  let result;\n\n  while ((result = _iterator.next()) && !result.done) {\n    const pair = result.value;\n    fn.call(obj, pair[0], pair[1]);\n  }\n};\n\n/**\n * It takes a regular expression and a string, and returns an array of all the matches\n *\n * @param {string} regExp - The regular expression to match against.\n * @param {string} str - The string to search.\n *\n * @returns {Array<boolean>}\n */\nconst matchAll = (regExp, str) => {\n  let matches;\n  const arr = [];\n\n  while ((matches = regExp.exec(str)) !== null) {\n    arr.push(matches);\n  }\n\n  return arr;\n};\n\n/* Checking if the kindOfTest function returns true when passed an HTMLFormElement. */\nconst isHTMLForm = kindOfTest('HTMLFormElement');\n\nconst toCamelCase = str => {\n  return str.toLowerCase().replace(/[-_\\s]([a-z\\d])(\\w*)/g,\n    function replacer(m, p1, p2) {\n      return p1.toUpperCase() + p2;\n    }\n  );\n};\n\n/* Creating a function that will check if an object has a property. */\nconst hasOwnProperty = (({hasOwnProperty}) => (obj, prop) => hasOwnProperty.call(obj, prop))(Object.prototype);\n\n/**\n * Determine if a value is a RegExp object\n *\n * @param {*} val The value to test\n *\n * @returns {boolean} True if value is a RegExp object, otherwise false\n */\nconst isRegExp = kindOfTest('RegExp');\n\nconst reduceDescriptors = (obj, reducer) => {\n  const descriptors = Object.getOwnPropertyDescriptors(obj);\n  const reducedDescriptors = {};\n\n  forEach(descriptors, (descriptor, name) => {\n    let ret;\n    if ((ret = reducer(descriptor, name, obj)) !== false) {\n      reducedDescriptors[name] = ret || descriptor;\n    }\n  });\n\n  Object.defineProperties(obj, reducedDescriptors);\n};\n\n/**\n * Makes all methods read-only\n * @param {Object} obj\n */\n\nconst freezeMethods = (obj) => {\n  reduceDescriptors(obj, (descriptor, name) => {\n    // skip restricted props in strict mode\n    if (isFunction(obj) && ['arguments', 'caller', 'callee'].indexOf(name) !== -1) {\n      return false;\n    }\n\n    const value = obj[name];\n\n    if (!isFunction(value)) return;\n\n    descriptor.enumerable = false;\n\n    if ('writable' in descriptor) {\n      descriptor.writable = false;\n      return;\n    }\n\n    if (!descriptor.set) {\n      descriptor.set = () => {\n        throw Error('Can not rewrite read-only method \\'' + name + '\\'');\n      };\n    }\n  });\n};\n\nconst toObjectSet = (arrayOrString, delimiter) => {\n  const obj = {};\n\n  const define = (arr) => {\n    arr.forEach(value => {\n      obj[value] = true;\n    });\n  };\n\n  isArray(arrayOrString) ? define(arrayOrString) : define(String(arrayOrString).split(delimiter));\n\n  return obj;\n};\n\nconst noop = () => {};\n\nconst toFiniteNumber = (value, defaultValue) => {\n  return value != null && Number.isFinite(value = +value) ? value : defaultValue;\n};\n\n/**\n * If the thing is a FormData object, return true, otherwise return false.\n *\n * @param {unknown} thing - The thing to check.\n *\n * @returns {boolean}\n */\nfunction isSpecCompliantForm(thing) {\n  return !!(thing && isFunction(thing.append) && thing[toStringTag] === 'FormData' && thing[iterator]);\n}\n\nconst toJSONObject = (obj) => {\n  const stack = new Array(10);\n\n  const visit = (source, i) => {\n\n    if (isObject(source)) {\n      if (stack.indexOf(source) >= 0) {\n        return;\n      }\n\n      //Buffer check\n      if (isBuffer(source)) {\n        return source;\n      }\n\n      if(!('toJSON' in source)) {\n        stack[i] = source;\n        const target = isArray(source) ? [] : {};\n\n        forEach(source, (value, key) => {\n          const reducedValue = visit(value, i + 1);\n          !isUndefined(reducedValue) && (target[key] = reducedValue);\n        });\n\n        stack[i] = undefined;\n\n        return target;\n      }\n    }\n\n    return source;\n  };\n\n  return visit(obj, 0);\n};\n\nconst isAsyncFn = kindOfTest('AsyncFunction');\n\nconst isThenable = (thing) =>\n  thing && (isObject(thing) || isFunction(thing)) && isFunction(thing.then) && isFunction(thing.catch);\n\n// original code\n// https://github.com/DigitalBrainJS/AxiosPromise/blob/16deab13710ec09779922131f3fa5954320f83ab/lib/utils.js#L11-L34\n\nconst _setImmediate = ((setImmediateSupported, postMessageSupported) => {\n  if (setImmediateSupported) {\n    return setImmediate;\n  }\n\n  return postMessageSupported ? ((token, callbacks) => {\n    _global.addEventListener(\"message\", ({source, data}) => {\n      if (source === _global && data === token) {\n        callbacks.length && callbacks.shift()();\n      }\n    }, false);\n\n    return (cb) => {\n      callbacks.push(cb);\n      _global.postMessage(token, \"*\");\n    }\n  })(`axios@${Math.random()}`, []) : (cb) => setTimeout(cb);\n})(\n  typeof setImmediate === 'function',\n  isFunction(_global.postMessage)\n);\n\nconst asap = typeof queueMicrotask !== 'undefined' ?\n  queueMicrotask.bind(_global) : ( typeof process !== 'undefined' && process.nextTick || _setImmediate);\n\n// *********************\n\n\nconst isIterable = (thing) => thing != null && isFunction(thing[iterator]);\n\n\nvar utils$1 = {\n  isArray,\n  isArrayBuffer,\n  isBuffer,\n  isFormData,\n  isArrayBufferView,\n  isString,\n  isNumber,\n  isBoolean,\n  isObject,\n  isPlainObject,\n  isEmptyObject,\n  isReadableStream,\n  isRequest,\n  isResponse,\n  isHeaders,\n  isUndefined,\n  isDate,\n  isFile,\n  isBlob,\n  isRegExp,\n  isFunction,\n  isStream,\n  isURLSearchParams,\n  isTypedArray,\n  isFileList,\n  forEach,\n  merge,\n  extend,\n  trim,\n  stripBOM,\n  inherits,\n  toFlatObject,\n  kindOf,\n  kindOfTest,\n  endsWith,\n  toArray,\n  forEachEntry,\n  matchAll,\n  isHTMLForm,\n  hasOwnProperty,\n  hasOwnProp: hasOwnProperty, // an alias to avoid ESLint no-prototype-builtins detection\n  reduceDescriptors,\n  freezeMethods,\n  toObjectSet,\n  toCamelCase,\n  noop,\n  toFiniteNumber,\n  findKey,\n  global: _global,\n  isContextDefined,\n  isSpecCompliantForm,\n  toJSONObject,\n  isAsyncFn,\n  isThenable,\n  setImmediate: _setImmediate,\n  asap,\n  isIterable\n};\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [config] The config.\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n *\n * @returns {Error} The created error.\n */\nfunction AxiosError(message, code, config, request, response) {\n  Error.call(this);\n\n  if (Error.captureStackTrace) {\n    Error.captureStackTrace(this, this.constructor);\n  } else {\n    this.stack = (new Error()).stack;\n  }\n\n  this.message = message;\n  this.name = 'AxiosError';\n  code && (this.code = code);\n  config && (this.config = config);\n  request && (this.request = request);\n  if (response) {\n    this.response = response;\n    this.status = response.status ? response.status : null;\n  }\n}\n\nutils$1.inherits(AxiosError, Error, {\n  toJSON: function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: utils$1.toJSONObject(this.config),\n      code: this.code,\n      status: this.status\n    };\n  }\n});\n\nconst prototype$1 = AxiosError.prototype;\nconst descriptors = {};\n\n[\n  'ERR_BAD_OPTION_VALUE',\n  'ERR_BAD_OPTION',\n  'ECONNABORTED',\n  'ETIMEDOUT',\n  'ERR_NETWORK',\n  'ERR_FR_TOO_MANY_REDIRECTS',\n  'ERR_DEPRECATED',\n  'ERR_BAD_RESPONSE',\n  'ERR_BAD_REQUEST',\n  'ERR_CANCELED',\n  'ERR_NOT_SUPPORT',\n  'ERR_INVALID_URL'\n// eslint-disable-next-line func-names\n].forEach(code => {\n  descriptors[code] = {value: code};\n});\n\nObject.defineProperties(AxiosError, descriptors);\nObject.defineProperty(prototype$1, 'isAxiosError', {value: true});\n\n// eslint-disable-next-line func-names\nAxiosError.from = (error, code, config, request, response, customProps) => {\n  const axiosError = Object.create(prototype$1);\n\n  utils$1.toFlatObject(error, axiosError, function filter(obj) {\n    return obj !== Error.prototype;\n  }, prop => {\n    return prop !== 'isAxiosError';\n  });\n\n  AxiosError.call(axiosError, error.message, code, config, request, response);\n\n  axiosError.cause = error;\n\n  axiosError.name = error.name;\n\n  customProps && Object.assign(axiosError, customProps);\n\n  return axiosError;\n};\n\n// eslint-disable-next-line strict\nvar httpAdapter = null;\n\n/**\n * Determines if the given thing is a array or js object.\n *\n * @param {string} thing - The object or array to be visited.\n *\n * @returns {boolean}\n */\nfunction isVisitable(thing) {\n  return utils$1.isPlainObject(thing) || utils$1.isArray(thing);\n}\n\n/**\n * It removes the brackets from the end of a string\n *\n * @param {string} key - The key of the parameter.\n *\n * @returns {string} the key without the brackets.\n */\nfunction removeBrackets(key) {\n  return utils$1.endsWith(key, '[]') ? key.slice(0, -2) : key;\n}\n\n/**\n * It takes a path, a key, and a boolean, and returns a string\n *\n * @param {string} path - The path to the current key.\n * @param {string} key - The key of the current object being iterated over.\n * @param {string} dots - If true, the key will be rendered with dots instead of brackets.\n *\n * @returns {string} The path to the current key.\n */\nfunction renderKey(path, key, dots) {\n  if (!path) return key;\n  return path.concat(key).map(function each(token, i) {\n    // eslint-disable-next-line no-param-reassign\n    token = removeBrackets(token);\n    return !dots && i ? '[' + token + ']' : token;\n  }).join(dots ? '.' : '');\n}\n\n/**\n * If the array is an array and none of its elements are visitable, then it's a flat array.\n *\n * @param {Array<any>} arr - The array to check\n *\n * @returns {boolean}\n */\nfunction isFlatArray(arr) {\n  return utils$1.isArray(arr) && !arr.some(isVisitable);\n}\n\nconst predicates = utils$1.toFlatObject(utils$1, {}, null, function filter(prop) {\n  return /^is[A-Z]/.test(prop);\n});\n\n/**\n * Convert a data object to FormData\n *\n * @param {Object} obj\n * @param {?Object} [formData]\n * @param {?Object} [options]\n * @param {Function} [options.visitor]\n * @param {Boolean} [options.metaTokens = true]\n * @param {Boolean} [options.dots = false]\n * @param {?Boolean} [options.indexes = false]\n *\n * @returns {Object}\n **/\n\n/**\n * It converts an object into a FormData object\n *\n * @param {Object<any, any>} obj - The object to convert to form data.\n * @param {string} formData - The FormData object to append to.\n * @param {Object<string, any>} options\n *\n * @returns\n */\nfunction toFormData(obj, formData, options) {\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('target must be an object');\n  }\n\n  // eslint-disable-next-line no-param-reassign\n  formData = formData || new (FormData)();\n\n  // eslint-disable-next-line no-param-reassign\n  options = utils$1.toFlatObject(options, {\n    metaTokens: true,\n    dots: false,\n    indexes: false\n  }, false, function defined(option, source) {\n    // eslint-disable-next-line no-eq-null,eqeqeq\n    return !utils$1.isUndefined(source[option]);\n  });\n\n  const metaTokens = options.metaTokens;\n  // eslint-disable-next-line no-use-before-define\n  const visitor = options.visitor || defaultVisitor;\n  const dots = options.dots;\n  const indexes = options.indexes;\n  const _Blob = options.Blob || typeof Blob !== 'undefined' && Blob;\n  const useBlob = _Blob && utils$1.isSpecCompliantForm(formData);\n\n  if (!utils$1.isFunction(visitor)) {\n    throw new TypeError('visitor must be a function');\n  }\n\n  function convertValue(value) {\n    if (value === null) return '';\n\n    if (utils$1.isDate(value)) {\n      return value.toISOString();\n    }\n\n    if (utils$1.isBoolean(value)) {\n      return value.toString();\n    }\n\n    if (!useBlob && utils$1.isBlob(value)) {\n      throw new AxiosError('Blob is not supported. Use a Buffer instead.');\n    }\n\n    if (utils$1.isArrayBuffer(value) || utils$1.isTypedArray(value)) {\n      return useBlob && typeof Blob === 'function' ? new Blob([value]) : Buffer.from(value);\n    }\n\n    return value;\n  }\n\n  /**\n   * Default visitor.\n   *\n   * @param {*} value\n   * @param {String|Number} key\n   * @param {Array<String|Number>} path\n   * @this {FormData}\n   *\n   * @returns {boolean} return true to visit the each prop of the value recursively\n   */\n  function defaultVisitor(value, key, path) {\n    let arr = value;\n\n    if (value && !path && typeof value === 'object') {\n      if (utils$1.endsWith(key, '{}')) {\n        // eslint-disable-next-line no-param-reassign\n        key = metaTokens ? key : key.slice(0, -2);\n        // eslint-disable-next-line no-param-reassign\n        value = JSON.stringify(value);\n      } else if (\n        (utils$1.isArray(value) && isFlatArray(value)) ||\n        ((utils$1.isFileList(value) || utils$1.endsWith(key, '[]')) && (arr = utils$1.toArray(value))\n        )) {\n        // eslint-disable-next-line no-param-reassign\n        key = removeBrackets(key);\n\n        arr.forEach(function each(el, index) {\n          !(utils$1.isUndefined(el) || el === null) && formData.append(\n            // eslint-disable-next-line no-nested-ternary\n            indexes === true ? renderKey([key], index, dots) : (indexes === null ? key : key + '[]'),\n            convertValue(el)\n          );\n        });\n        return false;\n      }\n    }\n\n    if (isVisitable(value)) {\n      return true;\n    }\n\n    formData.append(renderKey(path, key, dots), convertValue(value));\n\n    return false;\n  }\n\n  const stack = [];\n\n  const exposedHelpers = Object.assign(predicates, {\n    defaultVisitor,\n    convertValue,\n    isVisitable\n  });\n\n  function build(value, path) {\n    if (utils$1.isUndefined(value)) return;\n\n    if (stack.indexOf(value) !== -1) {\n      throw Error('Circular reference detected in ' + path.join('.'));\n    }\n\n    stack.push(value);\n\n    utils$1.forEach(value, function each(el, key) {\n      const result = !(utils$1.isUndefined(el) || el === null) && visitor.call(\n        formData, el, utils$1.isString(key) ? key.trim() : key, path, exposedHelpers\n      );\n\n      if (result === true) {\n        build(el, path ? path.concat(key) : [key]);\n      }\n    });\n\n    stack.pop();\n  }\n\n  if (!utils$1.isObject(obj)) {\n    throw new TypeError('data must be an object');\n  }\n\n  build(obj);\n\n  return formData;\n}\n\n/**\n * It encodes a string by replacing all characters that are not in the unreserved set with\n * their percent-encoded equivalents\n *\n * @param {string} str - The string to encode.\n *\n * @returns {string} The encoded string.\n */\nfunction encode$1(str) {\n  const charMap = {\n    '!': '%21',\n    \"'\": '%27',\n    '(': '%28',\n    ')': '%29',\n    '~': '%7E',\n    '%20': '+',\n    '%00': '\\x00'\n  };\n  return encodeURIComponent(str).replace(/[!'()~]|%20|%00/g, function replacer(match) {\n    return charMap[match];\n  });\n}\n\n/**\n * It takes a params object and converts it to a FormData object\n *\n * @param {Object<string, any>} params - The parameters to be converted to a FormData object.\n * @param {Object<string, any>} options - The options object passed to the Axios constructor.\n *\n * @returns {void}\n */\nfunction AxiosURLSearchParams(params, options) {\n  this._pairs = [];\n\n  params && toFormData(params, this, options);\n}\n\nconst prototype = AxiosURLSearchParams.prototype;\n\nprototype.append = function append(name, value) {\n  this._pairs.push([name, value]);\n};\n\nprototype.toString = function toString(encoder) {\n  const _encode = encoder ? function(value) {\n    return encoder.call(this, value, encode$1);\n  } : encode$1;\n\n  return this._pairs.map(function each(pair) {\n    return _encode(pair[0]) + '=' + _encode(pair[1]);\n  }, '').join('&');\n};\n\n/**\n * It replaces all instances of the characters `:`, `$`, `,`, `+`, `[`, and `]` with their\n * URI encoded counterparts\n *\n * @param {string} val The value to be encoded.\n *\n * @returns {string} The encoded value.\n */\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @param {?(object|Function)} options\n *\n * @returns {string} The formatted url\n */\nfunction buildURL(url, params, options) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n  \n  const _encode = options && options.encode || encode;\n\n  if (utils$1.isFunction(options)) {\n    options = {\n      serialize: options\n    };\n  } \n\n  const serializeFn = options && options.serialize;\n\n  let serializedParams;\n\n  if (serializeFn) {\n    serializedParams = serializeFn(params, options);\n  } else {\n    serializedParams = utils$1.isURLSearchParams(params) ?\n      params.toString() :\n      new AxiosURLSearchParams(params, options).toString(_encode);\n  }\n\n  if (serializedParams) {\n    const hashmarkIndex = url.indexOf(\"#\");\n\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n}\n\nclass InterceptorManager {\n  constructor() {\n    this.handlers = [];\n  }\n\n  /**\n   * Add a new interceptor to the stack\n   *\n   * @param {Function} fulfilled The function to handle `then` for a `Promise`\n   * @param {Function} rejected The function to handle `reject` for a `Promise`\n   *\n   * @return {Number} An ID used to remove interceptor later\n   */\n  use(fulfilled, rejected, options) {\n    this.handlers.push({\n      fulfilled,\n      rejected,\n      synchronous: options ? options.synchronous : false,\n      runWhen: options ? options.runWhen : null\n    });\n    return this.handlers.length - 1;\n  }\n\n  /**\n   * Remove an interceptor from the stack\n   *\n   * @param {Number} id The ID that was returned by `use`\n   *\n   * @returns {Boolean} `true` if the interceptor was removed, `false` otherwise\n   */\n  eject(id) {\n    if (this.handlers[id]) {\n      this.handlers[id] = null;\n    }\n  }\n\n  /**\n   * Clear all interceptors from the stack\n   *\n   * @returns {void}\n   */\n  clear() {\n    if (this.handlers) {\n      this.handlers = [];\n    }\n  }\n\n  /**\n   * Iterate over all the registered interceptors\n   *\n   * This method is particularly useful for skipping over any\n   * interceptors that may have become `null` calling `eject`.\n   *\n   * @param {Function} fn The function to call for each interceptor\n   *\n   * @returns {void}\n   */\n  forEach(fn) {\n    utils$1.forEach(this.handlers, function forEachHandler(h) {\n      if (h !== null) {\n        fn(h);\n      }\n    });\n  }\n}\n\nvar InterceptorManager$1 = InterceptorManager;\n\nvar transitionalDefaults = {\n  silentJSONParsing: true,\n  forcedJSONParsing: true,\n  clarifyTimeoutError: false\n};\n\nvar URLSearchParams$1 = typeof URLSearchParams !== 'undefined' ? URLSearchParams : AxiosURLSearchParams;\n\nvar FormData$1 = typeof FormData !== 'undefined' ? FormData : null;\n\nvar Blob$1 = typeof Blob !== 'undefined' ? Blob : null;\n\nvar platform$1 = {\n  isBrowser: true,\n  classes: {\n    URLSearchParams: URLSearchParams$1,\n    FormData: FormData$1,\n    Blob: Blob$1\n  },\n  protocols: ['http', 'https', 'file', 'blob', 'url', 'data']\n};\n\nconst hasBrowserEnv = typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst _navigator = typeof navigator === 'object' && navigator || undefined;\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n *\n * @returns {boolean}\n */\nconst hasStandardBrowserEnv = hasBrowserEnv &&\n  (!_navigator || ['ReactNative', 'NativeScript', 'NS'].indexOf(_navigator.product) < 0);\n\n/**\n * Determine if we're running in a standard browser webWorker environment\n *\n * Although the `isStandardBrowserEnv` method indicates that\n * `allows axios to run in a web worker`, the WebWorker will still be\n * filtered out due to its judgment standard\n * `typeof window !== 'undefined' && typeof document !== 'undefined'`.\n * This leads to a problem when axios post `FormData` in webWorker\n */\nconst hasStandardBrowserWebWorkerEnv = (() => {\n  return (\n    typeof WorkerGlobalScope !== 'undefined' &&\n    // eslint-disable-next-line no-undef\n    self instanceof WorkerGlobalScope &&\n    typeof self.importScripts === 'function'\n  );\n})();\n\nconst origin = hasBrowserEnv && window.location.href || 'http://localhost';\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  hasBrowserEnv: hasBrowserEnv,\n  hasStandardBrowserWebWorkerEnv: hasStandardBrowserWebWorkerEnv,\n  hasStandardBrowserEnv: hasStandardBrowserEnv,\n  navigator: _navigator,\n  origin: origin\n});\n\nvar platform = {\n  ...utils,\n  ...platform$1\n};\n\nfunction toURLEncodedForm(data, options) {\n  return toFormData(data, new platform.classes.URLSearchParams(), {\n    visitor: function(value, key, path, helpers) {\n      if (platform.isNode && utils$1.isBuffer(value)) {\n        this.append(key, value.toString('base64'));\n        return false;\n      }\n\n      return helpers.defaultVisitor.apply(this, arguments);\n    },\n    ...options\n  });\n}\n\n/**\n * It takes a string like `foo[x][y][z]` and returns an array like `['foo', 'x', 'y', 'z']\n *\n * @param {string} name - The name of the property to get.\n *\n * @returns An array of strings.\n */\nfunction parsePropPath(name) {\n  // foo[x][y][z]\n  // foo.x.y.z\n  // foo-x-y-z\n  // foo x y z\n  return utils$1.matchAll(/\\w+|\\[(\\w*)]/g, name).map(match => {\n    return match[0] === '[]' ? '' : match[1] || match[0];\n  });\n}\n\n/**\n * Convert an array to an object.\n *\n * @param {Array<any>} arr - The array to convert to an object.\n *\n * @returns An object with the same keys and values as the array.\n */\nfunction arrayToObject(arr) {\n  const obj = {};\n  const keys = Object.keys(arr);\n  let i;\n  const len = keys.length;\n  let key;\n  for (i = 0; i < len; i++) {\n    key = keys[i];\n    obj[key] = arr[key];\n  }\n  return obj;\n}\n\n/**\n * It takes a FormData object and returns a JavaScript object\n *\n * @param {string} formData The FormData object to convert to JSON.\n *\n * @returns {Object<string, any> | null} The converted object.\n */\nfunction formDataToJSON(formData) {\n  function buildPath(path, value, target, index) {\n    let name = path[index++];\n\n    if (name === '__proto__') return true;\n\n    const isNumericKey = Number.isFinite(+name);\n    const isLast = index >= path.length;\n    name = !name && utils$1.isArray(target) ? target.length : name;\n\n    if (isLast) {\n      if (utils$1.hasOwnProp(target, name)) {\n        target[name] = [target[name], value];\n      } else {\n        target[name] = value;\n      }\n\n      return !isNumericKey;\n    }\n\n    if (!target[name] || !utils$1.isObject(target[name])) {\n      target[name] = [];\n    }\n\n    const result = buildPath(path, value, target[name], index);\n\n    if (result && utils$1.isArray(target[name])) {\n      target[name] = arrayToObject(target[name]);\n    }\n\n    return !isNumericKey;\n  }\n\n  if (utils$1.isFormData(formData) && utils$1.isFunction(formData.entries)) {\n    const obj = {};\n\n    utils$1.forEachEntry(formData, (name, value) => {\n      buildPath(parsePropPath(name), value, obj, 0);\n    });\n\n    return obj;\n  }\n\n  return null;\n}\n\n/**\n * It takes a string, tries to parse it, and if it fails, it returns the stringified version\n * of the input\n *\n * @param {any} rawValue - The value to be stringified.\n * @param {Function} parser - A function that parses a string into a JavaScript object.\n * @param {Function} encoder - A function that takes a value and returns a string.\n *\n * @returns {string} A stringified version of the rawValue.\n */\nfunction stringifySafely(rawValue, parser, encoder) {\n  if (utils$1.isString(rawValue)) {\n    try {\n      (parser || JSON.parse)(rawValue);\n      return utils$1.trim(rawValue);\n    } catch (e) {\n      if (e.name !== 'SyntaxError') {\n        throw e;\n      }\n    }\n  }\n\n  return (encoder || JSON.stringify)(rawValue);\n}\n\nconst defaults = {\n\n  transitional: transitionalDefaults,\n\n  adapter: ['xhr', 'http', 'fetch'],\n\n  transformRequest: [function transformRequest(data, headers) {\n    const contentType = headers.getContentType() || '';\n    const hasJSONContentType = contentType.indexOf('application/json') > -1;\n    const isObjectPayload = utils$1.isObject(data);\n\n    if (isObjectPayload && utils$1.isHTMLForm(data)) {\n      data = new FormData(data);\n    }\n\n    const isFormData = utils$1.isFormData(data);\n\n    if (isFormData) {\n      return hasJSONContentType ? JSON.stringify(formDataToJSON(data)) : data;\n    }\n\n    if (utils$1.isArrayBuffer(data) ||\n      utils$1.isBuffer(data) ||\n      utils$1.isStream(data) ||\n      utils$1.isFile(data) ||\n      utils$1.isBlob(data) ||\n      utils$1.isReadableStream(data)\n    ) {\n      return data;\n    }\n    if (utils$1.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils$1.isURLSearchParams(data)) {\n      headers.setContentType('application/x-www-form-urlencoded;charset=utf-8', false);\n      return data.toString();\n    }\n\n    let isFileList;\n\n    if (isObjectPayload) {\n      if (contentType.indexOf('application/x-www-form-urlencoded') > -1) {\n        return toURLEncodedForm(data, this.formSerializer).toString();\n      }\n\n      if ((isFileList = utils$1.isFileList(data)) || contentType.indexOf('multipart/form-data') > -1) {\n        const _FormData = this.env && this.env.FormData;\n\n        return toFormData(\n          isFileList ? {'files[]': data} : data,\n          _FormData && new _FormData(),\n          this.formSerializer\n        );\n      }\n    }\n\n    if (isObjectPayload || hasJSONContentType ) {\n      headers.setContentType('application/json', false);\n      return stringifySafely(data);\n    }\n\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    const transitional = this.transitional || defaults.transitional;\n    const forcedJSONParsing = transitional && transitional.forcedJSONParsing;\n    const JSONRequested = this.responseType === 'json';\n\n    if (utils$1.isResponse(data) || utils$1.isReadableStream(data)) {\n      return data;\n    }\n\n    if (data && utils$1.isString(data) && ((forcedJSONParsing && !this.responseType) || JSONRequested)) {\n      const silentJSONParsing = transitional && transitional.silentJSONParsing;\n      const strictJSONParsing = !silentJSONParsing && JSONRequested;\n\n      try {\n        return JSON.parse(data);\n      } catch (e) {\n        if (strictJSONParsing) {\n          if (e.name === 'SyntaxError') {\n            throw AxiosError.from(e, AxiosError.ERR_BAD_RESPONSE, this, null, this.response);\n          }\n          throw e;\n        }\n      }\n    }\n\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  env: {\n    FormData: platform.classes.FormData,\n    Blob: platform.classes.Blob\n  },\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  },\n\n  headers: {\n    common: {\n      'Accept': 'application/json, text/plain, */*',\n      'Content-Type': undefined\n    }\n  }\n};\n\nutils$1.forEach(['delete', 'get', 'head', 'post', 'put', 'patch'], (method) => {\n  defaults.headers[method] = {};\n});\n\nvar defaults$1 = defaults;\n\n// RawAxiosHeaders whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nconst ignoreDuplicateOf = utils$1.toObjectSet([\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n]);\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} rawHeaders Headers needing to be parsed\n *\n * @returns {Object} Headers parsed into an object\n */\nvar parseHeaders = rawHeaders => {\n  const parsed = {};\n  let key;\n  let val;\n  let i;\n\n  rawHeaders && rawHeaders.split('\\n').forEach(function parser(line) {\n    i = line.indexOf(':');\n    key = line.substring(0, i).trim().toLowerCase();\n    val = line.substring(i + 1).trim();\n\n    if (!key || (parsed[key] && ignoreDuplicateOf[key])) {\n      return;\n    }\n\n    if (key === 'set-cookie') {\n      if (parsed[key]) {\n        parsed[key].push(val);\n      } else {\n        parsed[key] = [val];\n      }\n    } else {\n      parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n    }\n  });\n\n  return parsed;\n};\n\nconst $internals = Symbol('internals');\n\nfunction normalizeHeader(header) {\n  return header && String(header).trim().toLowerCase();\n}\n\nfunction normalizeValue(value) {\n  if (value === false || value == null) {\n    return value;\n  }\n\n  return utils$1.isArray(value) ? value.map(normalizeValue) : String(value);\n}\n\nfunction parseTokens(str) {\n  const tokens = Object.create(null);\n  const tokensRE = /([^\\s,;=]+)\\s*(?:=\\s*([^,;]+))?/g;\n  let match;\n\n  while ((match = tokensRE.exec(str))) {\n    tokens[match[1]] = match[2];\n  }\n\n  return tokens;\n}\n\nconst isValidHeaderName = (str) => /^[-_a-zA-Z0-9^`|~,!#$%&'*+.]+$/.test(str.trim());\n\nfunction matchHeaderValue(context, value, header, filter, isHeaderNameFilter) {\n  if (utils$1.isFunction(filter)) {\n    return filter.call(this, value, header);\n  }\n\n  if (isHeaderNameFilter) {\n    value = header;\n  }\n\n  if (!utils$1.isString(value)) return;\n\n  if (utils$1.isString(filter)) {\n    return value.indexOf(filter) !== -1;\n  }\n\n  if (utils$1.isRegExp(filter)) {\n    return filter.test(value);\n  }\n}\n\nfunction formatHeader(header) {\n  return header.trim()\n    .toLowerCase().replace(/([a-z\\d])(\\w*)/g, (w, char, str) => {\n      return char.toUpperCase() + str;\n    });\n}\n\nfunction buildAccessors(obj, header) {\n  const accessorName = utils$1.toCamelCase(' ' + header);\n\n  ['get', 'set', 'has'].forEach(methodName => {\n    Object.defineProperty(obj, methodName + accessorName, {\n      value: function(arg1, arg2, arg3) {\n        return this[methodName].call(this, header, arg1, arg2, arg3);\n      },\n      configurable: true\n    });\n  });\n}\n\nclass AxiosHeaders {\n  constructor(headers) {\n    headers && this.set(headers);\n  }\n\n  set(header, valueOrRewrite, rewrite) {\n    const self = this;\n\n    function setHeader(_value, _header, _rewrite) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!lHeader) {\n        throw new Error('header name must be a non-empty string');\n      }\n\n      const key = utils$1.findKey(self, lHeader);\n\n      if(!key || self[key] === undefined || _rewrite === true || (_rewrite === undefined && self[key] !== false)) {\n        self[key || _header] = normalizeValue(_value);\n      }\n    }\n\n    const setHeaders = (headers, _rewrite) =>\n      utils$1.forEach(headers, (_value, _header) => setHeader(_value, _header, _rewrite));\n\n    if (utils$1.isPlainObject(header) || header instanceof this.constructor) {\n      setHeaders(header, valueOrRewrite);\n    } else if(utils$1.isString(header) && (header = header.trim()) && !isValidHeaderName(header)) {\n      setHeaders(parseHeaders(header), valueOrRewrite);\n    } else if (utils$1.isObject(header) && utils$1.isIterable(header)) {\n      let obj = {}, dest, key;\n      for (const entry of header) {\n        if (!utils$1.isArray(entry)) {\n          throw TypeError('Object iterator must return a key-value pair');\n        }\n\n        obj[key = entry[0]] = (dest = obj[key]) ?\n          (utils$1.isArray(dest) ? [...dest, entry[1]] : [dest, entry[1]]) : entry[1];\n      }\n\n      setHeaders(obj, valueOrRewrite);\n    } else {\n      header != null && setHeader(valueOrRewrite, header, rewrite);\n    }\n\n    return this;\n  }\n\n  get(header, parser) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      if (key) {\n        const value = this[key];\n\n        if (!parser) {\n          return value;\n        }\n\n        if (parser === true) {\n          return parseTokens(value);\n        }\n\n        if (utils$1.isFunction(parser)) {\n          return parser.call(this, value, key);\n        }\n\n        if (utils$1.isRegExp(parser)) {\n          return parser.exec(value);\n        }\n\n        throw new TypeError('parser must be boolean|regexp|function');\n      }\n    }\n  }\n\n  has(header, matcher) {\n    header = normalizeHeader(header);\n\n    if (header) {\n      const key = utils$1.findKey(this, header);\n\n      return !!(key && this[key] !== undefined && (!matcher || matchHeaderValue(this, this[key], key, matcher)));\n    }\n\n    return false;\n  }\n\n  delete(header, matcher) {\n    const self = this;\n    let deleted = false;\n\n    function deleteHeader(_header) {\n      _header = normalizeHeader(_header);\n\n      if (_header) {\n        const key = utils$1.findKey(self, _header);\n\n        if (key && (!matcher || matchHeaderValue(self, self[key], key, matcher))) {\n          delete self[key];\n\n          deleted = true;\n        }\n      }\n    }\n\n    if (utils$1.isArray(header)) {\n      header.forEach(deleteHeader);\n    } else {\n      deleteHeader(header);\n    }\n\n    return deleted;\n  }\n\n  clear(matcher) {\n    const keys = Object.keys(this);\n    let i = keys.length;\n    let deleted = false;\n\n    while (i--) {\n      const key = keys[i];\n      if(!matcher || matchHeaderValue(this, this[key], key, matcher, true)) {\n        delete this[key];\n        deleted = true;\n      }\n    }\n\n    return deleted;\n  }\n\n  normalize(format) {\n    const self = this;\n    const headers = {};\n\n    utils$1.forEach(this, (value, header) => {\n      const key = utils$1.findKey(headers, header);\n\n      if (key) {\n        self[key] = normalizeValue(value);\n        delete self[header];\n        return;\n      }\n\n      const normalized = format ? formatHeader(header) : String(header).trim();\n\n      if (normalized !== header) {\n        delete self[header];\n      }\n\n      self[normalized] = normalizeValue(value);\n\n      headers[normalized] = true;\n    });\n\n    return this;\n  }\n\n  concat(...targets) {\n    return this.constructor.concat(this, ...targets);\n  }\n\n  toJSON(asStrings) {\n    const obj = Object.create(null);\n\n    utils$1.forEach(this, (value, header) => {\n      value != null && value !== false && (obj[header] = asStrings && utils$1.isArray(value) ? value.join(', ') : value);\n    });\n\n    return obj;\n  }\n\n  [Symbol.iterator]() {\n    return Object.entries(this.toJSON())[Symbol.iterator]();\n  }\n\n  toString() {\n    return Object.entries(this.toJSON()).map(([header, value]) => header + ': ' + value).join('\\n');\n  }\n\n  getSetCookie() {\n    return this.get(\"set-cookie\") || [];\n  }\n\n  get [Symbol.toStringTag]() {\n    return 'AxiosHeaders';\n  }\n\n  static from(thing) {\n    return thing instanceof this ? thing : new this(thing);\n  }\n\n  static concat(first, ...targets) {\n    const computed = new this(first);\n\n    targets.forEach((target) => computed.set(target));\n\n    return computed;\n  }\n\n  static accessor(header) {\n    const internals = this[$internals] = (this[$internals] = {\n      accessors: {}\n    });\n\n    const accessors = internals.accessors;\n    const prototype = this.prototype;\n\n    function defineAccessor(_header) {\n      const lHeader = normalizeHeader(_header);\n\n      if (!accessors[lHeader]) {\n        buildAccessors(prototype, _header);\n        accessors[lHeader] = true;\n      }\n    }\n\n    utils$1.isArray(header) ? header.forEach(defineAccessor) : defineAccessor(header);\n\n    return this;\n  }\n}\n\nAxiosHeaders.accessor(['Content-Type', 'Content-Length', 'Accept', 'Accept-Encoding', 'User-Agent', 'Authorization']);\n\n// reserved names hotfix\nutils$1.reduceDescriptors(AxiosHeaders.prototype, ({value}, key) => {\n  let mapped = key[0].toUpperCase() + key.slice(1); // map `set` => `Set`\n  return {\n    get: () => value,\n    set(headerValue) {\n      this[mapped] = headerValue;\n    }\n  }\n});\n\nutils$1.freezeMethods(AxiosHeaders);\n\nvar AxiosHeaders$1 = AxiosHeaders;\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Array|Function} fns A single function or Array of functions\n * @param {?Object} response The response object\n *\n * @returns {*} The resulting transformed data\n */\nfunction transformData(fns, response) {\n  const config = this || defaults$1;\n  const context = response || config;\n  const headers = AxiosHeaders$1.from(context.headers);\n  let data = context.data;\n\n  utils$1.forEach(fns, function transform(fn) {\n    data = fn.call(config, data, headers.normalize(), response ? response.status : undefined);\n  });\n\n  headers.normalize();\n\n  return data;\n}\n\nfunction isCancel(value) {\n  return !!(value && value.__CANCEL__);\n}\n\n/**\n * A `CanceledError` is an object that is thrown when an operation is canceled.\n *\n * @param {string=} message The message.\n * @param {Object=} config The config.\n * @param {Object=} request The request.\n *\n * @returns {CanceledError} The created error.\n */\nfunction CanceledError(message, config, request) {\n  // eslint-disable-next-line no-eq-null,eqeqeq\n  AxiosError.call(this, message == null ? 'canceled' : message, AxiosError.ERR_CANCELED, config, request);\n  this.name = 'CanceledError';\n}\n\nutils$1.inherits(CanceledError, AxiosError, {\n  __CANCEL__: true\n});\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n *\n * @returns {object} The response.\n */\nfunction settle(resolve, reject, response) {\n  const validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(new AxiosError(\n      'Request failed with status code ' + response.status,\n      [AxiosError.ERR_BAD_REQUEST, AxiosError.ERR_BAD_RESPONSE][Math.floor(response.status / 100) - 4],\n      response.config,\n      response.request,\n      response\n    ));\n  }\n}\n\nfunction parseProtocol(url) {\n  const match = /^([-+\\w]{1,25})(:?\\/\\/|:)/.exec(url);\n  return match && match[1] || '';\n}\n\n/**\n * Calculate data maxRate\n * @param {Number} [samplesCount= 10]\n * @param {Number} [min= 1000]\n * @returns {Function}\n */\nfunction speedometer(samplesCount, min) {\n  samplesCount = samplesCount || 10;\n  const bytes = new Array(samplesCount);\n  const timestamps = new Array(samplesCount);\n  let head = 0;\n  let tail = 0;\n  let firstSampleTS;\n\n  min = min !== undefined ? min : 1000;\n\n  return function push(chunkLength) {\n    const now = Date.now();\n\n    const startedAt = timestamps[tail];\n\n    if (!firstSampleTS) {\n      firstSampleTS = now;\n    }\n\n    bytes[head] = chunkLength;\n    timestamps[head] = now;\n\n    let i = tail;\n    let bytesCount = 0;\n\n    while (i !== head) {\n      bytesCount += bytes[i++];\n      i = i % samplesCount;\n    }\n\n    head = (head + 1) % samplesCount;\n\n    if (head === tail) {\n      tail = (tail + 1) % samplesCount;\n    }\n\n    if (now - firstSampleTS < min) {\n      return;\n    }\n\n    const passed = startedAt && now - startedAt;\n\n    return passed ? Math.round(bytesCount * 1000 / passed) : undefined;\n  };\n}\n\n/**\n * Throttle decorator\n * @param {Function} fn\n * @param {Number} freq\n * @return {Function}\n */\nfunction throttle(fn, freq) {\n  let timestamp = 0;\n  let threshold = 1000 / freq;\n  let lastArgs;\n  let timer;\n\n  const invoke = (args, now = Date.now()) => {\n    timestamp = now;\n    lastArgs = null;\n    if (timer) {\n      clearTimeout(timer);\n      timer = null;\n    }\n    fn(...args);\n  };\n\n  const throttled = (...args) => {\n    const now = Date.now();\n    const passed = now - timestamp;\n    if ( passed >= threshold) {\n      invoke(args, now);\n    } else {\n      lastArgs = args;\n      if (!timer) {\n        timer = setTimeout(() => {\n          timer = null;\n          invoke(lastArgs);\n        }, threshold - passed);\n      }\n    }\n  };\n\n  const flush = () => lastArgs && invoke(lastArgs);\n\n  return [throttled, flush];\n}\n\nconst progressEventReducer = (listener, isDownloadStream, freq = 3) => {\n  let bytesNotified = 0;\n  const _speedometer = speedometer(50, 250);\n\n  return throttle(e => {\n    const loaded = e.loaded;\n    const total = e.lengthComputable ? e.total : undefined;\n    const progressBytes = loaded - bytesNotified;\n    const rate = _speedometer(progressBytes);\n    const inRange = loaded <= total;\n\n    bytesNotified = loaded;\n\n    const data = {\n      loaded,\n      total,\n      progress: total ? (loaded / total) : undefined,\n      bytes: progressBytes,\n      rate: rate ? rate : undefined,\n      estimated: rate && total && inRange ? (total - loaded) / rate : undefined,\n      event: e,\n      lengthComputable: total != null,\n      [isDownloadStream ? 'download' : 'upload']: true\n    };\n\n    listener(data);\n  }, freq);\n};\n\nconst progressEventDecorator = (total, throttled) => {\n  const lengthComputable = total != null;\n\n  return [(loaded) => throttled[0]({\n    lengthComputable,\n    total,\n    loaded\n  }), throttled[1]];\n};\n\nconst asyncDecorator = (fn) => (...args) => utils$1.asap(() => fn(...args));\n\nvar isURLSameOrigin = platform.hasStandardBrowserEnv ? ((origin, isMSIE) => (url) => {\n  url = new URL(url, platform.origin);\n\n  return (\n    origin.protocol === url.protocol &&\n    origin.host === url.host &&\n    (isMSIE || origin.port === url.port)\n  );\n})(\n  new URL(platform.origin),\n  platform.navigator && /(msie|trident)/i.test(platform.navigator.userAgent)\n) : () => true;\n\nvar cookies = platform.hasStandardBrowserEnv ?\n\n  // Standard browser envs support document.cookie\n  {\n    write(name, value, expires, path, domain, secure) {\n      const cookie = [name + '=' + encodeURIComponent(value)];\n\n      utils$1.isNumber(expires) && cookie.push('expires=' + new Date(expires).toGMTString());\n\n      utils$1.isString(path) && cookie.push('path=' + path);\n\n      utils$1.isString(domain) && cookie.push('domain=' + domain);\n\n      secure === true && cookie.push('secure');\n\n      document.cookie = cookie.join('; ');\n    },\n\n    read(name) {\n      const match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n      return (match ? decodeURIComponent(match[3]) : null);\n    },\n\n    remove(name) {\n      this.write(name, '', Date.now() - 86400000);\n    }\n  }\n\n  :\n\n  // Non-standard browser env (web workers, react-native) lack needed support.\n  {\n    write() {},\n    read() {\n      return null;\n    },\n    remove() {}\n  };\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n *\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nfunction isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d+\\-.]*:)?\\/\\//i.test(url);\n}\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n *\n * @returns {string} The combined URL\n */\nfunction combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/?\\/$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n}\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n *\n * @returns {string} The combined full path\n */\nfunction buildFullPath(baseURL, requestedURL, allowAbsoluteUrls) {\n  let isRelativeUrl = !isAbsoluteURL(requestedURL);\n  if (baseURL && (isRelativeUrl || allowAbsoluteUrls == false)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n}\n\nconst headersToObject = (thing) => thing instanceof AxiosHeaders$1 ? { ...thing } : thing;\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n *\n * @returns {Object} New object resulting from merging config2 to config1\n */\nfunction mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  const config = {};\n\n  function getMergedValue(target, source, prop, caseless) {\n    if (utils$1.isPlainObject(target) && utils$1.isPlainObject(source)) {\n      return utils$1.merge.call({caseless}, target, source);\n    } else if (utils$1.isPlainObject(source)) {\n      return utils$1.merge({}, source);\n    } else if (utils$1.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDeepProperties(a, b, prop , caseless) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(a, b, prop , caseless);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a, prop , caseless);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function valueFromConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function defaultToConfig2(a, b) {\n    if (!utils$1.isUndefined(b)) {\n      return getMergedValue(undefined, b);\n    } else if (!utils$1.isUndefined(a)) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function mergeDirectKeys(a, b, prop) {\n    if (prop in config2) {\n      return getMergedValue(a, b);\n    } else if (prop in config1) {\n      return getMergedValue(undefined, a);\n    }\n  }\n\n  const mergeMap = {\n    url: valueFromConfig2,\n    method: valueFromConfig2,\n    data: valueFromConfig2,\n    baseURL: defaultToConfig2,\n    transformRequest: defaultToConfig2,\n    transformResponse: defaultToConfig2,\n    paramsSerializer: defaultToConfig2,\n    timeout: defaultToConfig2,\n    timeoutMessage: defaultToConfig2,\n    withCredentials: defaultToConfig2,\n    withXSRFToken: defaultToConfig2,\n    adapter: defaultToConfig2,\n    responseType: defaultToConfig2,\n    xsrfCookieName: defaultToConfig2,\n    xsrfHeaderName: defaultToConfig2,\n    onUploadProgress: defaultToConfig2,\n    onDownloadProgress: defaultToConfig2,\n    decompress: defaultToConfig2,\n    maxContentLength: defaultToConfig2,\n    maxBodyLength: defaultToConfig2,\n    beforeRedirect: defaultToConfig2,\n    transport: defaultToConfig2,\n    httpAgent: defaultToConfig2,\n    httpsAgent: defaultToConfig2,\n    cancelToken: defaultToConfig2,\n    socketPath: defaultToConfig2,\n    responseEncoding: defaultToConfig2,\n    validateStatus: mergeDirectKeys,\n    headers: (a, b , prop) => mergeDeepProperties(headersToObject(a), headersToObject(b),prop, true)\n  };\n\n  utils$1.forEach(Object.keys({...config1, ...config2}), function computeConfigValue(prop) {\n    const merge = mergeMap[prop] || mergeDeepProperties;\n    const configValue = merge(config1[prop], config2[prop], prop);\n    (utils$1.isUndefined(configValue) && merge !== mergeDirectKeys) || (config[prop] = configValue);\n  });\n\n  return config;\n}\n\nvar resolveConfig = (config) => {\n  const newConfig = mergeConfig({}, config);\n\n  let {data, withXSRFToken, xsrfHeaderName, xsrfCookieName, headers, auth} = newConfig;\n\n  newConfig.headers = headers = AxiosHeaders$1.from(headers);\n\n  newConfig.url = buildURL(buildFullPath(newConfig.baseURL, newConfig.url, newConfig.allowAbsoluteUrls), config.params, config.paramsSerializer);\n\n  // HTTP basic authentication\n  if (auth) {\n    headers.set('Authorization', 'Basic ' +\n      btoa((auth.username || '') + ':' + (auth.password ? unescape(encodeURIComponent(auth.password)) : ''))\n    );\n  }\n\n  let contentType;\n\n  if (utils$1.isFormData(data)) {\n    if (platform.hasStandardBrowserEnv || platform.hasStandardBrowserWebWorkerEnv) {\n      headers.setContentType(undefined); // Let the browser set it\n    } else if ((contentType = headers.getContentType()) !== false) {\n      // fix semicolon duplication issue for ReactNative FormData implementation\n      const [type, ...tokens] = contentType ? contentType.split(';').map(token => token.trim()).filter(Boolean) : [];\n      headers.setContentType([type || 'multipart/form-data', ...tokens].join('; '));\n    }\n  }\n\n  // Add xsrf header\n  // This is only done if running in a standard browser environment.\n  // Specifically not if we're in a web worker, or react-native.\n\n  if (platform.hasStandardBrowserEnv) {\n    withXSRFToken && utils$1.isFunction(withXSRFToken) && (withXSRFToken = withXSRFToken(newConfig));\n\n    if (withXSRFToken || (withXSRFToken !== false && isURLSameOrigin(newConfig.url))) {\n      // Add xsrf header\n      const xsrfValue = xsrfHeaderName && xsrfCookieName && cookies.read(xsrfCookieName);\n\n      if (xsrfValue) {\n        headers.set(xsrfHeaderName, xsrfValue);\n      }\n    }\n  }\n\n  return newConfig;\n};\n\nconst isXHRAdapterSupported = typeof XMLHttpRequest !== 'undefined';\n\nvar xhrAdapter = isXHRAdapterSupported && function (config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    const _config = resolveConfig(config);\n    let requestData = _config.data;\n    const requestHeaders = AxiosHeaders$1.from(_config.headers).normalize();\n    let {responseType, onUploadProgress, onDownloadProgress} = _config;\n    let onCanceled;\n    let uploadThrottled, downloadThrottled;\n    let flushUpload, flushDownload;\n\n    function done() {\n      flushUpload && flushUpload(); // flush events\n      flushDownload && flushDownload(); // flush events\n\n      _config.cancelToken && _config.cancelToken.unsubscribe(onCanceled);\n\n      _config.signal && _config.signal.removeEventListener('abort', onCanceled);\n    }\n\n    let request = new XMLHttpRequest();\n\n    request.open(_config.method.toUpperCase(), _config.url, true);\n\n    // Set the request timeout in MS\n    request.timeout = _config.timeout;\n\n    function onloadend() {\n      if (!request) {\n        return;\n      }\n      // Prepare the response\n      const responseHeaders = AxiosHeaders$1.from(\n        'getAllResponseHeaders' in request && request.getAllResponseHeaders()\n      );\n      const responseData = !responseType || responseType === 'text' || responseType === 'json' ?\n        request.responseText : request.response;\n      const response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config,\n        request\n      };\n\n      settle(function _resolve(value) {\n        resolve(value);\n        done();\n      }, function _reject(err) {\n        reject(err);\n        done();\n      }, response);\n\n      // Clean up request\n      request = null;\n    }\n\n    if ('onloadend' in request) {\n      // Use onloadend if available\n      request.onloadend = onloadend;\n    } else {\n      // Listen for ready state to emulate onloadend\n      request.onreadystatechange = function handleLoad() {\n        if (!request || request.readyState !== 4) {\n          return;\n        }\n\n        // The request errored out and we didn't get a response, this will be\n        // handled by onerror instead\n        // With one exception: request that using file: protocol, most browsers\n        // will return status as 0 even though it's a successful request\n        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n          return;\n        }\n        // readystate handler is calling before onerror or ontimeout handlers,\n        // so we should call onloadend on the next 'tick'\n        setTimeout(onloadend);\n      };\n    }\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(new AxiosError('Request aborted', AxiosError.ECONNABORTED, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      let timeoutErrorMessage = _config.timeout ? 'timeout of ' + _config.timeout + 'ms exceeded' : 'timeout exceeded';\n      const transitional = _config.transitional || transitionalDefaults;\n      if (_config.timeoutErrorMessage) {\n        timeoutErrorMessage = _config.timeoutErrorMessage;\n      }\n      reject(new AxiosError(\n        timeoutErrorMessage,\n        transitional.clarifyTimeoutError ? AxiosError.ETIMEDOUT : AxiosError.ECONNABORTED,\n        config,\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Remove Content-Type if data is undefined\n    requestData === undefined && requestHeaders.setContentType(null);\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils$1.forEach(requestHeaders.toJSON(), function setRequestHeader(val, key) {\n        request.setRequestHeader(key, val);\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils$1.isUndefined(_config.withCredentials)) {\n      request.withCredentials = !!_config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (responseType && responseType !== 'json') {\n      request.responseType = _config.responseType;\n    }\n\n    // Handle progress if needed\n    if (onDownloadProgress) {\n      ([downloadThrottled, flushDownload] = progressEventReducer(onDownloadProgress, true));\n      request.addEventListener('progress', downloadThrottled);\n    }\n\n    // Not all browsers support upload events\n    if (onUploadProgress && request.upload) {\n      ([uploadThrottled, flushUpload] = progressEventReducer(onUploadProgress));\n\n      request.upload.addEventListener('progress', uploadThrottled);\n\n      request.upload.addEventListener('loadend', flushUpload);\n    }\n\n    if (_config.cancelToken || _config.signal) {\n      // Handle cancellation\n      // eslint-disable-next-line func-names\n      onCanceled = cancel => {\n        if (!request) {\n          return;\n        }\n        reject(!cancel || cancel.type ? new CanceledError(null, config, request) : cancel);\n        request.abort();\n        request = null;\n      };\n\n      _config.cancelToken && _config.cancelToken.subscribe(onCanceled);\n      if (_config.signal) {\n        _config.signal.aborted ? onCanceled() : _config.signal.addEventListener('abort', onCanceled);\n      }\n    }\n\n    const protocol = parseProtocol(_config.url);\n\n    if (protocol && platform.protocols.indexOf(protocol) === -1) {\n      reject(new AxiosError('Unsupported protocol ' + protocol + ':', AxiosError.ERR_BAD_REQUEST, config));\n      return;\n    }\n\n\n    // Send the request\n    request.send(requestData || null);\n  });\n};\n\nconst composeSignals = (signals, timeout) => {\n  const {length} = (signals = signals ? signals.filter(Boolean) : []);\n\n  if (timeout || length) {\n    let controller = new AbortController();\n\n    let aborted;\n\n    const onabort = function (reason) {\n      if (!aborted) {\n        aborted = true;\n        unsubscribe();\n        const err = reason instanceof Error ? reason : this.reason;\n        controller.abort(err instanceof AxiosError ? err : new CanceledError(err instanceof Error ? err.message : err));\n      }\n    };\n\n    let timer = timeout && setTimeout(() => {\n      timer = null;\n      onabort(new AxiosError(`timeout ${timeout} of ms exceeded`, AxiosError.ETIMEDOUT));\n    }, timeout);\n\n    const unsubscribe = () => {\n      if (signals) {\n        timer && clearTimeout(timer);\n        timer = null;\n        signals.forEach(signal => {\n          signal.unsubscribe ? signal.unsubscribe(onabort) : signal.removeEventListener('abort', onabort);\n        });\n        signals = null;\n      }\n    };\n\n    signals.forEach((signal) => signal.addEventListener('abort', onabort));\n\n    const {signal} = controller;\n\n    signal.unsubscribe = () => utils$1.asap(unsubscribe);\n\n    return signal;\n  }\n};\n\nvar composeSignals$1 = composeSignals;\n\nconst streamChunk = function* (chunk, chunkSize) {\n  let len = chunk.byteLength;\n\n  if (!chunkSize || len < chunkSize) {\n    yield chunk;\n    return;\n  }\n\n  let pos = 0;\n  let end;\n\n  while (pos < len) {\n    end = pos + chunkSize;\n    yield chunk.slice(pos, end);\n    pos = end;\n  }\n};\n\nconst readBytes = async function* (iterable, chunkSize) {\n  for await (const chunk of readStream(iterable)) {\n    yield* streamChunk(chunk, chunkSize);\n  }\n};\n\nconst readStream = async function* (stream) {\n  if (stream[Symbol.asyncIterator]) {\n    yield* stream;\n    return;\n  }\n\n  const reader = stream.getReader();\n  try {\n    for (;;) {\n      const {done, value} = await reader.read();\n      if (done) {\n        break;\n      }\n      yield value;\n    }\n  } finally {\n    await reader.cancel();\n  }\n};\n\nconst trackStream = (stream, chunkSize, onProgress, onFinish) => {\n  const iterator = readBytes(stream, chunkSize);\n\n  let bytes = 0;\n  let done;\n  let _onFinish = (e) => {\n    if (!done) {\n      done = true;\n      onFinish && onFinish(e);\n    }\n  };\n\n  return new ReadableStream({\n    async pull(controller) {\n      try {\n        const {done, value} = await iterator.next();\n\n        if (done) {\n         _onFinish();\n          controller.close();\n          return;\n        }\n\n        let len = value.byteLength;\n        if (onProgress) {\n          let loadedBytes = bytes += len;\n          onProgress(loadedBytes);\n        }\n        controller.enqueue(new Uint8Array(value));\n      } catch (err) {\n        _onFinish(err);\n        throw err;\n      }\n    },\n    cancel(reason) {\n      _onFinish(reason);\n      return iterator.return();\n    }\n  }, {\n    highWaterMark: 2\n  })\n};\n\nconst isFetchSupported = typeof fetch === 'function' && typeof Request === 'function' && typeof Response === 'function';\nconst isReadableStreamSupported = isFetchSupported && typeof ReadableStream === 'function';\n\n// used only inside the fetch adapter\nconst encodeText = isFetchSupported && (typeof TextEncoder === 'function' ?\n    ((encoder) => (str) => encoder.encode(str))(new TextEncoder()) :\n    async (str) => new Uint8Array(await new Response(str).arrayBuffer())\n);\n\nconst test = (fn, ...args) => {\n  try {\n    return !!fn(...args);\n  } catch (e) {\n    return false\n  }\n};\n\nconst supportsRequestStream = isReadableStreamSupported && test(() => {\n  let duplexAccessed = false;\n\n  const hasContentType = new Request(platform.origin, {\n    body: new ReadableStream(),\n    method: 'POST',\n    get duplex() {\n      duplexAccessed = true;\n      return 'half';\n    },\n  }).headers.has('Content-Type');\n\n  return duplexAccessed && !hasContentType;\n});\n\nconst DEFAULT_CHUNK_SIZE = 64 * 1024;\n\nconst supportsResponseStream = isReadableStreamSupported &&\n  test(() => utils$1.isReadableStream(new Response('').body));\n\n\nconst resolvers = {\n  stream: supportsResponseStream && ((res) => res.body)\n};\n\nisFetchSupported && (((res) => {\n  ['text', 'arrayBuffer', 'blob', 'formData', 'stream'].forEach(type => {\n    !resolvers[type] && (resolvers[type] = utils$1.isFunction(res[type]) ? (res) => res[type]() :\n      (_, config) => {\n        throw new AxiosError(`Response type '${type}' is not supported`, AxiosError.ERR_NOT_SUPPORT, config);\n      });\n  });\n})(new Response));\n\nconst getBodyLength = async (body) => {\n  if (body == null) {\n    return 0;\n  }\n\n  if(utils$1.isBlob(body)) {\n    return body.size;\n  }\n\n  if(utils$1.isSpecCompliantForm(body)) {\n    const _request = new Request(platform.origin, {\n      method: 'POST',\n      body,\n    });\n    return (await _request.arrayBuffer()).byteLength;\n  }\n\n  if(utils$1.isArrayBufferView(body) || utils$1.isArrayBuffer(body)) {\n    return body.byteLength;\n  }\n\n  if(utils$1.isURLSearchParams(body)) {\n    body = body + '';\n  }\n\n  if(utils$1.isString(body)) {\n    return (await encodeText(body)).byteLength;\n  }\n};\n\nconst resolveBodyLength = async (headers, body) => {\n  const length = utils$1.toFiniteNumber(headers.getContentLength());\n\n  return length == null ? getBodyLength(body) : length;\n};\n\nvar fetchAdapter = isFetchSupported && (async (config) => {\n  let {\n    url,\n    method,\n    data,\n    signal,\n    cancelToken,\n    timeout,\n    onDownloadProgress,\n    onUploadProgress,\n    responseType,\n    headers,\n    withCredentials = 'same-origin',\n    fetchOptions\n  } = resolveConfig(config);\n\n  responseType = responseType ? (responseType + '').toLowerCase() : 'text';\n\n  let composedSignal = composeSignals$1([signal, cancelToken && cancelToken.toAbortSignal()], timeout);\n\n  let request;\n\n  const unsubscribe = composedSignal && composedSignal.unsubscribe && (() => {\n      composedSignal.unsubscribe();\n  });\n\n  let requestContentLength;\n\n  try {\n    if (\n      onUploadProgress && supportsRequestStream && method !== 'get' && method !== 'head' &&\n      (requestContentLength = await resolveBodyLength(headers, data)) !== 0\n    ) {\n      let _request = new Request(url, {\n        method: 'POST',\n        body: data,\n        duplex: \"half\"\n      });\n\n      let contentTypeHeader;\n\n      if (utils$1.isFormData(data) && (contentTypeHeader = _request.headers.get('content-type'))) {\n        headers.setContentType(contentTypeHeader);\n      }\n\n      if (_request.body) {\n        const [onProgress, flush] = progressEventDecorator(\n          requestContentLength,\n          progressEventReducer(asyncDecorator(onUploadProgress))\n        );\n\n        data = trackStream(_request.body, DEFAULT_CHUNK_SIZE, onProgress, flush);\n      }\n    }\n\n    if (!utils$1.isString(withCredentials)) {\n      withCredentials = withCredentials ? 'include' : 'omit';\n    }\n\n    // Cloudflare Workers throws when credentials are defined\n    // see https://github.com/cloudflare/workerd/issues/902\n    const isCredentialsSupported = \"credentials\" in Request.prototype;\n    request = new Request(url, {\n      ...fetchOptions,\n      signal: composedSignal,\n      method: method.toUpperCase(),\n      headers: headers.normalize().toJSON(),\n      body: data,\n      duplex: \"half\",\n      credentials: isCredentialsSupported ? withCredentials : undefined\n    });\n\n    let response = await fetch(request, fetchOptions);\n\n    const isStreamResponse = supportsResponseStream && (responseType === 'stream' || responseType === 'response');\n\n    if (supportsResponseStream && (onDownloadProgress || (isStreamResponse && unsubscribe))) {\n      const options = {};\n\n      ['status', 'statusText', 'headers'].forEach(prop => {\n        options[prop] = response[prop];\n      });\n\n      const responseContentLength = utils$1.toFiniteNumber(response.headers.get('content-length'));\n\n      const [onProgress, flush] = onDownloadProgress && progressEventDecorator(\n        responseContentLength,\n        progressEventReducer(asyncDecorator(onDownloadProgress), true)\n      ) || [];\n\n      response = new Response(\n        trackStream(response.body, DEFAULT_CHUNK_SIZE, onProgress, () => {\n          flush && flush();\n          unsubscribe && unsubscribe();\n        }),\n        options\n      );\n    }\n\n    responseType = responseType || 'text';\n\n    let responseData = await resolvers[utils$1.findKey(resolvers, responseType) || 'text'](response, config);\n\n    !isStreamResponse && unsubscribe && unsubscribe();\n\n    return await new Promise((resolve, reject) => {\n      settle(resolve, reject, {\n        data: responseData,\n        headers: AxiosHeaders$1.from(response.headers),\n        status: response.status,\n        statusText: response.statusText,\n        config,\n        request\n      });\n    })\n  } catch (err) {\n    unsubscribe && unsubscribe();\n\n    if (err && err.name === 'TypeError' && /Load failed|fetch/i.test(err.message)) {\n      throw Object.assign(\n        new AxiosError('Network Error', AxiosError.ERR_NETWORK, config, request),\n        {\n          cause: err.cause || err\n        }\n      )\n    }\n\n    throw AxiosError.from(err, err && err.code, config, request);\n  }\n});\n\nconst knownAdapters = {\n  http: httpAdapter,\n  xhr: xhrAdapter,\n  fetch: fetchAdapter\n};\n\nutils$1.forEach(knownAdapters, (fn, value) => {\n  if (fn) {\n    try {\n      Object.defineProperty(fn, 'name', {value});\n    } catch (e) {\n      // eslint-disable-next-line no-empty\n    }\n    Object.defineProperty(fn, 'adapterName', {value});\n  }\n});\n\nconst renderReason = (reason) => `- ${reason}`;\n\nconst isResolvedHandle = (adapter) => utils$1.isFunction(adapter) || adapter === null || adapter === false;\n\nvar adapters = {\n  getAdapter: (adapters) => {\n    adapters = utils$1.isArray(adapters) ? adapters : [adapters];\n\n    const {length} = adapters;\n    let nameOrAdapter;\n    let adapter;\n\n    const rejectedReasons = {};\n\n    for (let i = 0; i < length; i++) {\n      nameOrAdapter = adapters[i];\n      let id;\n\n      adapter = nameOrAdapter;\n\n      if (!isResolvedHandle(nameOrAdapter)) {\n        adapter = knownAdapters[(id = String(nameOrAdapter)).toLowerCase()];\n\n        if (adapter === undefined) {\n          throw new AxiosError(`Unknown adapter '${id}'`);\n        }\n      }\n\n      if (adapter) {\n        break;\n      }\n\n      rejectedReasons[id || '#' + i] = adapter;\n    }\n\n    if (!adapter) {\n\n      const reasons = Object.entries(rejectedReasons)\n        .map(([id, state]) => `adapter ${id} ` +\n          (state === false ? 'is not supported by the environment' : 'is not available in the build')\n        );\n\n      let s = length ?\n        (reasons.length > 1 ? 'since :\\n' + reasons.map(renderReason).join('\\n') : ' ' + renderReason(reasons[0])) :\n        'as no adapter specified';\n\n      throw new AxiosError(\n        `There is no suitable adapter to dispatch the request ` + s,\n        'ERR_NOT_SUPPORT'\n      );\n    }\n\n    return adapter;\n  },\n  adapters: knownAdapters\n};\n\n/**\n * Throws a `CanceledError` if cancellation has been requested.\n *\n * @param {Object} config The config that is to be used for the request\n *\n * @returns {void}\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n\n  if (config.signal && config.signal.aborted) {\n    throw new CanceledError(null, config);\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n *\n * @returns {Promise} The Promise to be fulfilled\n */\nfunction dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  config.headers = AxiosHeaders$1.from(config.headers);\n\n  // Transform request data\n  config.data = transformData.call(\n    config,\n    config.transformRequest\n  );\n\n  if (['post', 'put', 'patch'].indexOf(config.method) !== -1) {\n    config.headers.setContentType('application/x-www-form-urlencoded', false);\n  }\n\n  const adapter = adapters.getAdapter(config.adapter || defaults$1.adapter);\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData.call(\n      config,\n      config.transformResponse,\n      response\n    );\n\n    response.headers = AxiosHeaders$1.from(response.headers);\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData.call(\n          config,\n          config.transformResponse,\n          reason.response\n        );\n        reason.response.headers = AxiosHeaders$1.from(reason.response.headers);\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n}\n\nconst VERSION = \"1.11.0\";\n\nconst validators$1 = {};\n\n// eslint-disable-next-line func-names\n['object', 'boolean', 'number', 'function', 'string', 'symbol'].forEach((type, i) => {\n  validators$1[type] = function validator(thing) {\n    return typeof thing === type || 'a' + (i < 1 ? 'n ' : ' ') + type;\n  };\n});\n\nconst deprecatedWarnings = {};\n\n/**\n * Transitional option validator\n *\n * @param {function|boolean?} validator - set to false if the transitional option has been removed\n * @param {string?} version - deprecated version / removed since version\n * @param {string?} message - some message with additional info\n *\n * @returns {function}\n */\nvalidators$1.transitional = function transitional(validator, version, message) {\n  function formatMessage(opt, desc) {\n    return '[Axios v' + VERSION + '] Transitional option \\'' + opt + '\\'' + desc + (message ? '. ' + message : '');\n  }\n\n  // eslint-disable-next-line func-names\n  return (value, opt, opts) => {\n    if (validator === false) {\n      throw new AxiosError(\n        formatMessage(opt, ' has been removed' + (version ? ' in ' + version : '')),\n        AxiosError.ERR_DEPRECATED\n      );\n    }\n\n    if (version && !deprecatedWarnings[opt]) {\n      deprecatedWarnings[opt] = true;\n      // eslint-disable-next-line no-console\n      console.warn(\n        formatMessage(\n          opt,\n          ' has been deprecated since v' + version + ' and will be removed in the near future'\n        )\n      );\n    }\n\n    return validator ? validator(value, opt, opts) : true;\n  };\n};\n\nvalidators$1.spelling = function spelling(correctSpelling) {\n  return (value, opt) => {\n    // eslint-disable-next-line no-console\n    console.warn(`${opt} is likely a misspelling of ${correctSpelling}`);\n    return true;\n  }\n};\n\n/**\n * Assert object's properties type\n *\n * @param {object} options\n * @param {object} schema\n * @param {boolean?} allowUnknown\n *\n * @returns {object}\n */\n\nfunction assertOptions(options, schema, allowUnknown) {\n  if (typeof options !== 'object') {\n    throw new AxiosError('options must be an object', AxiosError.ERR_BAD_OPTION_VALUE);\n  }\n  const keys = Object.keys(options);\n  let i = keys.length;\n  while (i-- > 0) {\n    const opt = keys[i];\n    const validator = schema[opt];\n    if (validator) {\n      const value = options[opt];\n      const result = value === undefined || validator(value, opt, options);\n      if (result !== true) {\n        throw new AxiosError('option ' + opt + ' must be ' + result, AxiosError.ERR_BAD_OPTION_VALUE);\n      }\n      continue;\n    }\n    if (allowUnknown !== true) {\n      throw new AxiosError('Unknown option ' + opt, AxiosError.ERR_BAD_OPTION);\n    }\n  }\n}\n\nvar validator = {\n  assertOptions,\n  validators: validators$1\n};\n\nconst validators = validator.validators;\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n *\n * @return {Axios} A new instance of Axios\n */\nclass Axios {\n  constructor(instanceConfig) {\n    this.defaults = instanceConfig || {};\n    this.interceptors = {\n      request: new InterceptorManager$1(),\n      response: new InterceptorManager$1()\n    };\n  }\n\n  /**\n   * Dispatch a request\n   *\n   * @param {String|Object} configOrUrl The config specific for this request (merged with this.defaults)\n   * @param {?Object} config\n   *\n   * @returns {Promise} The Promise to be fulfilled\n   */\n  async request(configOrUrl, config) {\n    try {\n      return await this._request(configOrUrl, config);\n    } catch (err) {\n      if (err instanceof Error) {\n        let dummy = {};\n\n        Error.captureStackTrace ? Error.captureStackTrace(dummy) : (dummy = new Error());\n\n        // slice off the Error: ... line\n        const stack = dummy.stack ? dummy.stack.replace(/^.+\\n/, '') : '';\n        try {\n          if (!err.stack) {\n            err.stack = stack;\n            // match without the 2 top stack lines\n          } else if (stack && !String(err.stack).endsWith(stack.replace(/^.+\\n.+\\n/, ''))) {\n            err.stack += '\\n' + stack;\n          }\n        } catch (e) {\n          // ignore the case where \"stack\" is an un-writable property\n        }\n      }\n\n      throw err;\n    }\n  }\n\n  _request(configOrUrl, config) {\n    /*eslint no-param-reassign:0*/\n    // Allow for axios('example/url'[, config]) a la fetch API\n    if (typeof configOrUrl === 'string') {\n      config = config || {};\n      config.url = configOrUrl;\n    } else {\n      config = configOrUrl || {};\n    }\n\n    config = mergeConfig(this.defaults, config);\n\n    const {transitional, paramsSerializer, headers} = config;\n\n    if (transitional !== undefined) {\n      validator.assertOptions(transitional, {\n        silentJSONParsing: validators.transitional(validators.boolean),\n        forcedJSONParsing: validators.transitional(validators.boolean),\n        clarifyTimeoutError: validators.transitional(validators.boolean)\n      }, false);\n    }\n\n    if (paramsSerializer != null) {\n      if (utils$1.isFunction(paramsSerializer)) {\n        config.paramsSerializer = {\n          serialize: paramsSerializer\n        };\n      } else {\n        validator.assertOptions(paramsSerializer, {\n          encode: validators.function,\n          serialize: validators.function\n        }, true);\n      }\n    }\n\n    // Set config.allowAbsoluteUrls\n    if (config.allowAbsoluteUrls !== undefined) ; else if (this.defaults.allowAbsoluteUrls !== undefined) {\n      config.allowAbsoluteUrls = this.defaults.allowAbsoluteUrls;\n    } else {\n      config.allowAbsoluteUrls = true;\n    }\n\n    validator.assertOptions(config, {\n      baseUrl: validators.spelling('baseURL'),\n      withXsrfToken: validators.spelling('withXSRFToken')\n    }, true);\n\n    // Set config.method\n    config.method = (config.method || this.defaults.method || 'get').toLowerCase();\n\n    // Flatten headers\n    let contextHeaders = headers && utils$1.merge(\n      headers.common,\n      headers[config.method]\n    );\n\n    headers && utils$1.forEach(\n      ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n      (method) => {\n        delete headers[method];\n      }\n    );\n\n    config.headers = AxiosHeaders$1.concat(contextHeaders, headers);\n\n    // filter out skipped interceptors\n    const requestInterceptorChain = [];\n    let synchronousRequestInterceptors = true;\n    this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n      if (typeof interceptor.runWhen === 'function' && interceptor.runWhen(config) === false) {\n        return;\n      }\n\n      synchronousRequestInterceptors = synchronousRequestInterceptors && interceptor.synchronous;\n\n      requestInterceptorChain.unshift(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    const responseInterceptorChain = [];\n    this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n      responseInterceptorChain.push(interceptor.fulfilled, interceptor.rejected);\n    });\n\n    let promise;\n    let i = 0;\n    let len;\n\n    if (!synchronousRequestInterceptors) {\n      const chain = [dispatchRequest.bind(this), undefined];\n      chain.unshift(...requestInterceptorChain);\n      chain.push(...responseInterceptorChain);\n      len = chain.length;\n\n      promise = Promise.resolve(config);\n\n      while (i < len) {\n        promise = promise.then(chain[i++], chain[i++]);\n      }\n\n      return promise;\n    }\n\n    len = requestInterceptorChain.length;\n\n    let newConfig = config;\n\n    i = 0;\n\n    while (i < len) {\n      const onFulfilled = requestInterceptorChain[i++];\n      const onRejected = requestInterceptorChain[i++];\n      try {\n        newConfig = onFulfilled(newConfig);\n      } catch (error) {\n        onRejected.call(this, error);\n        break;\n      }\n    }\n\n    try {\n      promise = dispatchRequest.call(this, newConfig);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    i = 0;\n    len = responseInterceptorChain.length;\n\n    while (i < len) {\n      promise = promise.then(responseInterceptorChain[i++], responseInterceptorChain[i++]);\n    }\n\n    return promise;\n  }\n\n  getUri(config) {\n    config = mergeConfig(this.defaults, config);\n    const fullPath = buildFullPath(config.baseURL, config.url, config.allowAbsoluteUrls);\n    return buildURL(fullPath, config.params, config.paramsSerializer);\n  }\n}\n\n// Provide aliases for supported request methods\nutils$1.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method,\n      url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils$1.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n\n  function generateHTTPMethod(isForm) {\n    return function httpMethod(url, data, config) {\n      return this.request(mergeConfig(config || {}, {\n        method,\n        headers: isForm ? {\n          'Content-Type': 'multipart/form-data'\n        } : {},\n        url,\n        data\n      }));\n    };\n  }\n\n  Axios.prototype[method] = generateHTTPMethod();\n\n  Axios.prototype[method + 'Form'] = generateHTTPMethod(true);\n});\n\nvar Axios$1 = Axios;\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @param {Function} executor The executor function.\n *\n * @returns {CancelToken}\n */\nclass CancelToken {\n  constructor(executor) {\n    if (typeof executor !== 'function') {\n      throw new TypeError('executor must be a function.');\n    }\n\n    let resolvePromise;\n\n    this.promise = new Promise(function promiseExecutor(resolve) {\n      resolvePromise = resolve;\n    });\n\n    const token = this;\n\n    // eslint-disable-next-line func-names\n    this.promise.then(cancel => {\n      if (!token._listeners) return;\n\n      let i = token._listeners.length;\n\n      while (i-- > 0) {\n        token._listeners[i](cancel);\n      }\n      token._listeners = null;\n    });\n\n    // eslint-disable-next-line func-names\n    this.promise.then = onfulfilled => {\n      let _resolve;\n      // eslint-disable-next-line func-names\n      const promise = new Promise(resolve => {\n        token.subscribe(resolve);\n        _resolve = resolve;\n      }).then(onfulfilled);\n\n      promise.cancel = function reject() {\n        token.unsubscribe(_resolve);\n      };\n\n      return promise;\n    };\n\n    executor(function cancel(message, config, request) {\n      if (token.reason) {\n        // Cancellation has already been requested\n        return;\n      }\n\n      token.reason = new CanceledError(message, config, request);\n      resolvePromise(token.reason);\n    });\n  }\n\n  /**\n   * Throws a `CanceledError` if cancellation has been requested.\n   */\n  throwIfRequested() {\n    if (this.reason) {\n      throw this.reason;\n    }\n  }\n\n  /**\n   * Subscribe to the cancel signal\n   */\n\n  subscribe(listener) {\n    if (this.reason) {\n      listener(this.reason);\n      return;\n    }\n\n    if (this._listeners) {\n      this._listeners.push(listener);\n    } else {\n      this._listeners = [listener];\n    }\n  }\n\n  /**\n   * Unsubscribe from the cancel signal\n   */\n\n  unsubscribe(listener) {\n    if (!this._listeners) {\n      return;\n    }\n    const index = this._listeners.indexOf(listener);\n    if (index !== -1) {\n      this._listeners.splice(index, 1);\n    }\n  }\n\n  toAbortSignal() {\n    const controller = new AbortController();\n\n    const abort = (err) => {\n      controller.abort(err);\n    };\n\n    this.subscribe(abort);\n\n    controller.signal.unsubscribe = () => this.unsubscribe(abort);\n\n    return controller.signal;\n  }\n\n  /**\n   * Returns an object that contains a new `CancelToken` and a function that, when called,\n   * cancels the `CancelToken`.\n   */\n  static source() {\n    let cancel;\n    const token = new CancelToken(function executor(c) {\n      cancel = c;\n    });\n    return {\n      token,\n      cancel\n    };\n  }\n}\n\nvar CancelToken$1 = CancelToken;\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n *\n * @returns {Function}\n */\nfunction spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n}\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n *\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nfunction isAxiosError(payload) {\n  return utils$1.isObject(payload) && (payload.isAxiosError === true);\n}\n\nconst HttpStatusCode = {\n  Continue: 100,\n  SwitchingProtocols: 101,\n  Processing: 102,\n  EarlyHints: 103,\n  Ok: 200,\n  Created: 201,\n  Accepted: 202,\n  NonAuthoritativeInformation: 203,\n  NoContent: 204,\n  ResetContent: 205,\n  PartialContent: 206,\n  MultiStatus: 207,\n  AlreadyReported: 208,\n  ImUsed: 226,\n  MultipleChoices: 300,\n  MovedPermanently: 301,\n  Found: 302,\n  SeeOther: 303,\n  NotModified: 304,\n  UseProxy: 305,\n  Unused: 306,\n  TemporaryRedirect: 307,\n  PermanentRedirect: 308,\n  BadRequest: 400,\n  Unauthorized: 401,\n  PaymentRequired: 402,\n  Forbidden: 403,\n  NotFound: 404,\n  MethodNotAllowed: 405,\n  NotAcceptable: 406,\n  ProxyAuthenticationRequired: 407,\n  RequestTimeout: 408,\n  Conflict: 409,\n  Gone: 410,\n  LengthRequired: 411,\n  PreconditionFailed: 412,\n  PayloadTooLarge: 413,\n  UriTooLong: 414,\n  UnsupportedMediaType: 415,\n  RangeNotSatisfiable: 416,\n  ExpectationFailed: 417,\n  ImATeapot: 418,\n  MisdirectedRequest: 421,\n  UnprocessableEntity: 422,\n  Locked: 423,\n  FailedDependency: 424,\n  TooEarly: 425,\n  UpgradeRequired: 426,\n  PreconditionRequired: 428,\n  TooManyRequests: 429,\n  RequestHeaderFieldsTooLarge: 431,\n  UnavailableForLegalReasons: 451,\n  InternalServerError: 500,\n  NotImplemented: 501,\n  BadGateway: 502,\n  ServiceUnavailable: 503,\n  GatewayTimeout: 504,\n  HttpVersionNotSupported: 505,\n  VariantAlsoNegotiates: 506,\n  InsufficientStorage: 507,\n  LoopDetected: 508,\n  NotExtended: 510,\n  NetworkAuthenticationRequired: 511,\n};\n\nObject.entries(HttpStatusCode).forEach(([key, value]) => {\n  HttpStatusCode[value] = key;\n});\n\nvar HttpStatusCode$1 = HttpStatusCode;\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n *\n * @returns {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  const context = new Axios$1(defaultConfig);\n  const instance = bind(Axios$1.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils$1.extend(instance, Axios$1.prototype, context, {allOwnKeys: true});\n\n  // Copy context to instance\n  utils$1.extend(instance, context, null, {allOwnKeys: true});\n\n  // Factory for creating new instances\n  instance.create = function create(instanceConfig) {\n    return createInstance(mergeConfig(defaultConfig, instanceConfig));\n  };\n\n  return instance;\n}\n\n// Create the default instance to be exported\nconst axios = createInstance(defaults$1);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios$1;\n\n// Expose Cancel & CancelToken\naxios.CanceledError = CanceledError;\naxios.CancelToken = CancelToken$1;\naxios.isCancel = isCancel;\naxios.VERSION = VERSION;\naxios.toFormData = toFormData;\n\n// Expose AxiosError class\naxios.AxiosError = AxiosError;\n\n// alias for CanceledError for backward compatibility\naxios.Cancel = axios.CanceledError;\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\n\naxios.spread = spread;\n\n// Expose isAxiosError\naxios.isAxiosError = isAxiosError;\n\n// Expose mergeConfig\naxios.mergeConfig = mergeConfig;\n\naxios.AxiosHeaders = AxiosHeaders$1;\n\naxios.formToJSON = thing => formDataToJSON(utils$1.isHTMLForm(thing) ? new FormData(thing) : thing);\n\naxios.getAdapter = adapters.getAdapter;\n\naxios.HttpStatusCode = HttpStatusCode$1;\n\naxios.default = axios;\n\nmodule.exports = axios;\n//# sourceMappingURL=axios.cjs.map\n\n\n//# sourceURL=webpack://frontend/./node_modules/axios/dist/browser/axios.cjs?\n}");

/***/ }),

/***/ "./node_modules/redom/dist/redom.cjs":
/*!*******************************************!*\
  !*** ./node_modules/redom/dist/redom.cjs ***!
  \*******************************************/
/***/ (function(__unused_webpack_module, exports) {

eval("{(function (global, factory) {\n   true ? factory(exports) :\n  0;\n})(this, (function (exports) { 'use strict';\n\n  function _arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];\n    return n;\n  }\n  function _classCallCheck(a, n) {\n    if (!(a instanceof n)) throw new TypeError(\"Cannot call a class as a function\");\n  }\n  function _construct(t, e, r) {\n    if (_isNativeReflectConstruct()) return Reflect.construct.apply(null, arguments);\n    var o = [null];\n    o.push.apply(o, e);\n    var p = new (t.bind.apply(t, o))();\n    return p;\n  }\n  function _defineProperties(e, r) {\n    for (var t = 0; t < r.length; t++) {\n      var o = r[t];\n      o.enumerable = o.enumerable || false, o.configurable = true, \"value\" in o && (o.writable = true), Object.defineProperty(e, _toPropertyKey(o.key), o);\n    }\n  }\n  function _createClass(e, r, t) {\n    return r && _defineProperties(e.prototype, r), Object.defineProperty(e, \"prototype\", {\n      writable: false\n    }), e;\n  }\n  function _createForOfIteratorHelper(r, e) {\n    var t = \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (!t) {\n      if (Array.isArray(r) || (t = _unsupportedIterableToArray(r)) || e) {\n        t && (r = t);\n        var n = 0,\n          F = function () {};\n        return {\n          s: F,\n          n: function () {\n            return n >= r.length ? {\n              done: true\n            } : {\n              done: false,\n              value: r[n++]\n            };\n          },\n          e: function (r) {\n            throw r;\n          },\n          f: F\n        };\n      }\n      throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n    }\n    var o,\n      a = true,\n      u = false;\n    return {\n      s: function () {\n        t = t.call(r);\n      },\n      n: function () {\n        var r = t.next();\n        return a = r.done, r;\n      },\n      e: function (r) {\n        u = true, o = r;\n      },\n      f: function () {\n        try {\n          a || null == t.return || t.return();\n        } finally {\n          if (u) throw o;\n        }\n      }\n    };\n  }\n  function _isNativeReflectConstruct() {\n    try {\n      var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    } catch (t) {}\n    return (_isNativeReflectConstruct = function () {\n      return !!t;\n    })();\n  }\n  function _toPrimitive(t, r) {\n    if (\"object\" != typeof t || !t) return t;\n    var e = t[Symbol.toPrimitive];\n    if (undefined !== e) {\n      var i = e.call(t, r);\n      if (\"object\" != typeof i) return i;\n      throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n    }\n    return (String )(t);\n  }\n  function _toPropertyKey(t) {\n    var i = _toPrimitive(t, \"string\");\n    return \"symbol\" == typeof i ? i : i + \"\";\n  }\n  function _typeof(o) {\n    \"@babel/helpers - typeof\";\n\n    return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) {\n      return typeof o;\n    } : function (o) {\n      return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o;\n    }, _typeof(o);\n  }\n  function _unsupportedIterableToArray(r, a) {\n    if (r) {\n      if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n      var t = {}.toString.call(r).slice(8, -1);\n      return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : undefined;\n    }\n  }\n\n  function createElement(query, ns) {\n    var _parse = parse(query),\n      tag = _parse.tag,\n      id = _parse.id,\n      className = _parse.className;\n    var element = ns ? document.createElementNS(ns, tag) : document.createElement(tag);\n    if (id) {\n      element.id = id;\n    }\n    if (className) {\n      if (ns) {\n        element.setAttribute(\"class\", className);\n      } else {\n        element.className = className;\n      }\n    }\n    return element;\n  }\n  function parse(query) {\n    var chunks = query.split(/([.#])/);\n    var className = \"\";\n    var id = \"\";\n    for (var i = 1; i < chunks.length; i += 2) {\n      switch (chunks[i]) {\n        case \".\":\n          className += \" \".concat(chunks[i + 1]);\n          break;\n        case \"#\":\n          id = chunks[i + 1];\n      }\n    }\n    return {\n      className: className.trim(),\n      tag: chunks[0] || \"div\",\n      id: id\n    };\n  }\n\n  function html(query) {\n    var element;\n    var type = _typeof(query);\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (type === \"string\") {\n      element = createElement(query);\n    } else if (type === \"function\") {\n      var Query = query;\n      element = _construct(Query, args);\n    } else {\n      throw new Error(\"At least one argument required\");\n    }\n    parseArgumentsInternal(getEl(element), args, true);\n    return element;\n  }\n  var el = html;\n  var h = html;\n  html.extend = function extendHtml() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return html.bind.apply(html, [this].concat(args));\n  };\n\n  function unmount(parent, _child) {\n    var child = _child;\n    var parentEl = getEl(parent);\n    var childEl = getEl(child);\n    if (child === childEl && childEl.__redom_view) {\n      // try to look up the view if not provided\n      child = childEl.__redom_view;\n    }\n    if (childEl.parentNode) {\n      doUnmount(child, childEl, parentEl);\n      parentEl.removeChild(childEl);\n    }\n    return child;\n  }\n  function doUnmount(child, childEl, parentEl) {\n    var hooks = childEl.__redom_lifecycle;\n    if (hooksAreEmpty(hooks)) {\n      childEl.__redom_lifecycle = {};\n      return;\n    }\n    var traverse = parentEl;\n    if (childEl.__redom_mounted) {\n      trigger(childEl, \"onunmount\");\n    }\n    while (traverse) {\n      var parentHooks = traverse.__redom_lifecycle || {};\n      for (var hook in hooks) {\n        if (parentHooks[hook]) {\n          parentHooks[hook] -= hooks[hook];\n        }\n      }\n      if (hooksAreEmpty(parentHooks)) {\n        traverse.__redom_lifecycle = null;\n      }\n      traverse = traverse.parentNode;\n    }\n  }\n  function hooksAreEmpty(hooks) {\n    if (hooks == null) {\n      return true;\n    }\n    for (var key in hooks) {\n      if (hooks[key]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  var hookNames = [\"onmount\", \"onremount\", \"onunmount\"];\n  var shadowRootAvailable = typeof window !== \"undefined\" && \"ShadowRoot\" in window;\n  function mount(parent, _child, before, replace) {\n    var child = _child;\n    var parentEl = getEl(parent);\n    var childEl = getEl(child);\n    if (child === childEl && childEl.__redom_view) {\n      // try to look up the view if not provided\n      child = childEl.__redom_view;\n    }\n    if (child !== childEl) {\n      childEl.__redom_view = child;\n    }\n    var wasMounted = childEl.__redom_mounted;\n    var oldParent = childEl.parentNode;\n    if (wasMounted && oldParent !== parentEl) {\n      doUnmount(child, childEl, oldParent);\n    }\n    if (before != null) {\n      if (replace) {\n        var beforeEl = getEl(before);\n        if (beforeEl.__redom_mounted) {\n          trigger(beforeEl, \"onunmount\");\n        }\n        parentEl.replaceChild(childEl, beforeEl);\n      } else {\n        parentEl.insertBefore(childEl, getEl(before));\n      }\n    } else {\n      parentEl.appendChild(childEl);\n    }\n    doMount(child, childEl, parentEl, oldParent);\n    return child;\n  }\n  function trigger(el, eventName) {\n    var _view$eventName;\n    if (eventName === \"onmount\" || eventName === \"onremount\") {\n      el.__redom_mounted = true;\n    } else if (eventName === \"onunmount\") {\n      el.__redom_mounted = false;\n    }\n    var hooks = el.__redom_lifecycle;\n    if (!hooks) {\n      return;\n    }\n    var view = el.__redom_view;\n    var hookCount = 0;\n    view === null || view === undefined || (_view$eventName = view[eventName]) === null || _view$eventName === undefined || _view$eventName.call(view);\n    for (var hook in hooks) {\n      if (hook) {\n        hookCount++;\n      }\n    }\n    if (hookCount) {\n      var traverse = el.firstChild;\n      while (traverse) {\n        var next = traverse.nextSibling;\n        trigger(traverse, eventName);\n        traverse = next;\n      }\n    }\n  }\n  function doMount(child, childEl, parentEl, oldParent) {\n    var _traverse;\n    if (!childEl.__redom_lifecycle) {\n      childEl.__redom_lifecycle = {};\n    }\n    var hooks = childEl.__redom_lifecycle;\n    var remount = parentEl === oldParent;\n    var hooksFound = false;\n    var _iterator = _createForOfIteratorHelper(hookNames),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var hookName = _step.value;\n        if (!remount) {\n          // if already mounted, skip this phase\n          if (child !== childEl) {\n            // only Views can have lifecycle events\n            if (hookName in child) {\n              hooks[hookName] = (hooks[hookName] || 0) + 1;\n            }\n          }\n        }\n        if (hooks[hookName]) {\n          hooksFound = true;\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n    if (!hooksFound) {\n      childEl.__redom_lifecycle = {};\n      return;\n    }\n    var traverse = parentEl;\n    var triggered = false;\n    if (remount || (_traverse = traverse) !== null && _traverse !== undefined && _traverse.__redom_mounted) {\n      trigger(childEl, remount ? \"onremount\" : \"onmount\");\n      triggered = true;\n    }\n    while (traverse) {\n      var parent = traverse.parentNode;\n      if (!traverse.__redom_lifecycle) {\n        traverse.__redom_lifecycle = {};\n      }\n      var parentHooks = traverse.__redom_lifecycle;\n      for (var hook in hooks) {\n        parentHooks[hook] = (parentHooks[hook] || 0) + hooks[hook];\n      }\n      if (triggered) {\n        break;\n      }\n      if (traverse.nodeType === Node.DOCUMENT_NODE || shadowRootAvailable && traverse instanceof ShadowRoot || parent !== null && parent !== undefined && parent.__redom_mounted) {\n        trigger(traverse, remount ? \"onremount\" : \"onmount\");\n        triggered = true;\n      }\n      traverse = parent;\n    }\n  }\n\n  function setStyle(view, arg1, arg2) {\n    var el = getEl(view);\n    if (_typeof(arg1) === \"object\") {\n      for (var key in arg1) {\n        setStyleValue(el, key, arg1[key]);\n      }\n    } else {\n      setStyleValue(el, arg1, arg2);\n    }\n  }\n  function setStyleValue(el, key, value) {\n    el.style[key] = value == null ? \"\" : value;\n  }\n\n  var xlinkns = \"http://www.w3.org/1999/xlink\";\n  function setAttr(view, arg1, arg2) {\n    setAttrInternal(view, arg1, arg2);\n  }\n  function setAttrInternal(view, arg1, arg2, initial) {\n    var el = getEl(view);\n    var isObj = _typeof(arg1) === \"object\";\n    if (isObj) {\n      for (var key in arg1) {\n        setAttrInternal(el, key, arg1[key], initial);\n      }\n    } else {\n      var isSVG = el instanceof SVGElement;\n      var isFunc = typeof arg2 === \"function\";\n      if (arg1 === \"style\" && _typeof(arg2) === \"object\") {\n        setStyle(el, arg2);\n      } else if (isSVG && isFunc) {\n        el[arg1] = arg2;\n      } else if (arg1 === \"dataset\") {\n        setData(el, arg2);\n      } else if (!isSVG && (arg1 in el || isFunc) && arg1 !== \"list\") {\n        el[arg1] = arg2;\n      } else {\n        if (isSVG && arg1 === \"xlink\") {\n          setXlink(el, arg2);\n          return;\n        }\n        if (initial && arg1 === \"class\") {\n          setClassName(el, arg2);\n          return;\n        }\n        if (arg2 == null) {\n          el.removeAttribute(arg1);\n        } else {\n          el.setAttribute(arg1, arg2);\n        }\n      }\n    }\n  }\n  function setClassName(el, additionToClassName) {\n    if (additionToClassName == null) {\n      el.removeAttribute(\"class\");\n    } else if (el.classList) {\n      el.classList.add(additionToClassName);\n    } else if (_typeof(el.className) === \"object\" && el.className && el.className.baseVal) {\n      el.className.baseVal = \"\".concat(el.className.baseVal, \" \").concat(additionToClassName).trim();\n    } else {\n      el.className = \"\".concat(el.className, \" \").concat(additionToClassName).trim();\n    }\n  }\n  function setXlink(el, arg1, arg2) {\n    if (_typeof(arg1) === \"object\") {\n      for (var key in arg1) {\n        setXlink(el, key, arg1[key]);\n      }\n    } else {\n      if (arg2 != null) {\n        el.setAttributeNS(xlinkns, arg1, arg2);\n      } else {\n        el.removeAttributeNS(xlinkns, arg1, arg2);\n      }\n    }\n  }\n  function setData(el, arg1, arg2) {\n    if (_typeof(arg1) === \"object\") {\n      for (var key in arg1) {\n        setData(el, key, arg1[key]);\n      }\n    } else {\n      if (arg2 != null) {\n        el.dataset[arg1] = arg2;\n      } else {\n        delete el.dataset[arg1];\n      }\n    }\n  }\n\n  function text(str) {\n    return document.createTextNode(str != null ? str : \"\");\n  }\n\n  function parseArgumentsInternal(element, args, initial) {\n    var _iterator = _createForOfIteratorHelper(args),\n      _step;\n    try {\n      for (_iterator.s(); !(_step = _iterator.n()).done;) {\n        var arg = _step.value;\n        if (arg !== 0 && !arg) {\n          continue;\n        }\n        var type = _typeof(arg);\n        if (type === \"function\") {\n          arg(element);\n        } else if (type === \"string\" || type === \"number\") {\n          element.appendChild(text(arg));\n        } else if (isNode(getEl(arg))) {\n          mount(element, arg);\n        } else if (arg.length) {\n          parseArgumentsInternal(element, arg, initial);\n        } else if (type === \"object\") {\n          setAttrInternal(element, arg, null, initial);\n        }\n      }\n    } catch (err) {\n      _iterator.e(err);\n    } finally {\n      _iterator.f();\n    }\n  }\n  function ensureEl(parent) {\n    return typeof parent === \"string\" ? html(parent) : getEl(parent);\n  }\n  function getEl(parent) {\n    return parent.nodeType && parent || !parent.el && parent || getEl(parent.el);\n  }\n  function isNode(arg) {\n    return arg === null || arg === undefined ? undefined : arg.nodeType;\n  }\n\n  function dispatch(child, data) {\n    var eventName = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"redom\";\n    var childEl = getEl(child);\n    var event = new CustomEvent(eventName, {\n      bubbles: true,\n      detail: data\n    });\n    childEl.dispatchEvent(event);\n  }\n\n  function setChildren(parent) {\n    var parentEl = getEl(parent);\n    for (var _len = arguments.length, children = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      children[_key - 1] = arguments[_key];\n    }\n    var current = traverse(parent, children, parentEl.firstChild);\n    while (current) {\n      var next = current.nextSibling;\n      unmount(parent, current);\n      current = next;\n    }\n  }\n  function traverse(parent, children, _current) {\n    var current = _current;\n    var childEls = Array(children.length);\n    for (var i = 0; i < children.length; i++) {\n      childEls[i] = children[i] && getEl(children[i]);\n    }\n    for (var _i = 0; _i < children.length; _i++) {\n      var child = children[_i];\n      if (!child) {\n        continue;\n      }\n      var childEl = childEls[_i];\n      if (childEl === current) {\n        current = current.nextSibling;\n        continue;\n      }\n      if (isNode(childEl)) {\n        var _current2;\n        var next = (_current2 = current) === null || _current2 === undefined ? undefined : _current2.nextSibling;\n        var exists = child.__redom_index != null;\n        var replace = exists && next === childEls[_i + 1];\n        mount(parent, child, current, replace);\n        if (replace) {\n          current = next;\n        }\n        continue;\n      }\n      if (child.length != null) {\n        current = traverse(parent, child, current);\n      }\n    }\n    return current;\n  }\n\n  function listPool(View, key, initData) {\n    return new ListPool(View, key, initData);\n  }\n  var ListPool = /*#__PURE__*/function () {\n    function ListPool(View, key, initData) {\n      _classCallCheck(this, ListPool);\n      this.View = View;\n      this.initData = initData;\n      this.oldLookup = {};\n      this.lookup = {};\n      this.oldViews = [];\n      this.views = [];\n      if (key != null) {\n        this.key = typeof key === \"function\" ? key : propKey(key);\n      }\n    }\n    return _createClass(ListPool, [{\n      key: \"update\",\n      value: function update(data, context) {\n        var View = this.View,\n          key = this.key,\n          initData = this.initData;\n        var keySet = key != null;\n        var oldLookup = this.lookup;\n        var newLookup = {};\n        var newViews = Array(data.length);\n        var oldViews = this.views;\n        for (var i = 0; i < data.length; i++) {\n          var _view$update, _view;\n          var item = data[i];\n          var view = undefined;\n          if (keySet) {\n            var id = key(item);\n            view = oldLookup[id] || new View(initData, item, i, data);\n            newLookup[id] = view;\n            view.__redom_id = id;\n          } else {\n            view = oldViews[i] || new View(initData, item, i, data);\n          }\n          (_view$update = (_view = view).update) === null || _view$update === undefined || _view$update.call(_view, item, i, data, context);\n          var el = getEl(view.el);\n          el.__redom_view = view;\n          newViews[i] = view;\n        }\n        this.oldViews = oldViews;\n        this.views = newViews;\n        this.oldLookup = oldLookup;\n        this.lookup = newLookup;\n      }\n    }]);\n  }();\n  function propKey(key) {\n    return function proppedKey(item) {\n      return item[key];\n    };\n  }\n\n  function list(parent, View, key, initData) {\n    return new List(parent, View, key, initData);\n  }\n  var List = /*#__PURE__*/function () {\n    function List(parent, View, key, initData) {\n      _classCallCheck(this, List);\n      this.View = View;\n      this.initData = initData;\n      this.views = [];\n      this.pool = new ListPool(View, key, initData);\n      this.el = ensureEl(parent);\n      this.keySet = key != null;\n    }\n    return _createClass(List, [{\n      key: \"update\",\n      value: function update(data, context) {\n        var keySet = this.keySet;\n        var oldViews = this.views;\n        this.pool.update(data || [], context);\n        var _this$pool = this.pool,\n          views = _this$pool.views,\n          lookup = _this$pool.lookup;\n        if (keySet) {\n          for (var i = 0; i < oldViews.length; i++) {\n            var oldView = oldViews[i];\n            var id = oldView.__redom_id;\n            if (lookup[id] == null) {\n              oldView.__redom_index = null;\n              unmount(this, oldView);\n            }\n          }\n        }\n        for (var _i = 0; _i < views.length; _i++) {\n          var view = views[_i];\n          view.__redom_index = _i;\n        }\n        setChildren(this, views);\n        if (keySet) {\n          this.lookup = lookup;\n        }\n        this.views = views;\n      }\n    }]);\n  }();\n  List.extend = function extendList(parent, View, key, initData) {\n    return List.bind(List, parent, View, key, initData);\n  };\n  list.extend = List.extend;\n\n  function place(View, initData) {\n    return new Place(View, initData);\n  }\n  var Place = /*#__PURE__*/function () {\n    function Place(View, initData) {\n      _classCallCheck(this, Place);\n      this.el = text(\"\");\n      this.visible = false;\n      this.view = null;\n      this._placeholder = this.el;\n      if (View instanceof Node) {\n        this._el = View;\n      } else if (View.el instanceof Node) {\n        this._el = View;\n        this.view = View;\n      } else {\n        this._View = View;\n      }\n      this._initData = initData;\n    }\n    return _createClass(Place, [{\n      key: \"update\",\n      value: function update(visible, data) {\n        var placeholder = this._placeholder;\n        var parentNode = this.el.parentNode;\n        if (visible) {\n          var _this$view, _this$view$update;\n          if (!this.visible) {\n            if (this._el) {\n              mount(parentNode, this._el, placeholder);\n              unmount(parentNode, placeholder);\n              this.el = getEl(this._el);\n              this.visible = visible;\n            } else {\n              var View = this._View;\n              var view = new View(this._initData);\n              this.el = getEl(view);\n              this.view = view;\n              mount(parentNode, view, placeholder);\n              unmount(parentNode, placeholder);\n            }\n          }\n          (_this$view = this.view) === null || _this$view === undefined || (_this$view$update = _this$view.update) === null || _this$view$update === undefined || _this$view$update.call(_this$view, data);\n        } else {\n          if (this.visible) {\n            if (this._el) {\n              mount(parentNode, placeholder, this._el);\n              unmount(parentNode, this._el);\n              this.el = placeholder;\n              this.visible = visible;\n              return;\n            }\n            mount(parentNode, placeholder, this.view);\n            unmount(parentNode, this.view);\n            this.el = placeholder;\n            this.view = null;\n          }\n        }\n        this.visible = visible;\n      }\n    }]);\n  }();\n\n  function ref(ctx, key, value) {\n    ctx[key] = value;\n    return value;\n  }\n\n  function router(parent, views, initData) {\n    return new Router(parent, views, initData);\n  }\n  var Router = /*#__PURE__*/function () {\n    function Router(parent, views, initData) {\n      _classCallCheck(this, Router);\n      this.el = ensureEl(parent);\n      this.views = views;\n      this.Views = views; // backwards compatibility\n      this.initData = initData;\n    }\n    return _createClass(Router, [{\n      key: \"update\",\n      value: function update(route, data) {\n        var _this$view, _this$view$update;\n        if (route !== this.route) {\n          var views = this.views;\n          var View = views[route];\n          this.route = route;\n          if (View && (View instanceof Node || View.el instanceof Node)) {\n            this.view = View;\n          } else {\n            this.view = View && new View(this.initData, data);\n          }\n          setChildren(this.el, [this.view]);\n        }\n        (_this$view = this.view) === null || _this$view === undefined || (_this$view$update = _this$view.update) === null || _this$view$update === undefined || _this$view$update.call(_this$view, data, route);\n      }\n    }]);\n  }();\n\n  var ns = \"http://www.w3.org/2000/svg\";\n  function svg(query) {\n    var element;\n    var type = _typeof(query);\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    if (type === \"string\") {\n      element = createElement(query, ns);\n    } else if (type === \"function\") {\n      var Query = query;\n      element = _construct(Query, args);\n    } else {\n      throw new Error(\"At least one argument required\");\n    }\n    parseArgumentsInternal(getEl(element), args, true);\n    return element;\n  }\n  var s = svg;\n  svg.extend = function extendSvg() {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n    return svg.bind.apply(svg, [this].concat(args));\n  };\n  svg.ns = ns;\n\n  function viewFactory(views, key) {\n    if (!views || _typeof(views) !== \"object\") {\n      throw new Error(\"views must be an object\");\n    }\n    if (!key || typeof key !== \"string\") {\n      throw new Error(\"key must be a string\");\n    }\n    return function factoryView(initData, item, i, data) {\n      var viewKey = item[key];\n      var View = views[viewKey];\n      if (View) {\n        return new View(initData, item, i, data);\n      }\n      throw new Error(\"view \".concat(viewKey, \" not found\"));\n    };\n  }\n\n  exports.List = List;\n  exports.ListPool = ListPool;\n  exports.Place = Place;\n  exports.Router = Router;\n  exports.dispatch = dispatch;\n  exports.el = el;\n  exports.h = h;\n  exports.html = html;\n  exports.list = list;\n  exports.listPool = listPool;\n  exports.mount = mount;\n  exports.place = place;\n  exports.ref = ref;\n  exports.router = router;\n  exports.s = s;\n  exports.setAttr = setAttr;\n  exports.setChildren = setChildren;\n  exports.setData = setData;\n  exports.setStyle = setStyle;\n  exports.setXlink = setXlink;\n  exports.svg = svg;\n  exports.text = text;\n  exports.unmount = unmount;\n  exports.viewFactory = viewFactory;\n\n}));\n\n\n//# sourceURL=webpack://frontend/./node_modules/redom/dist/redom.cjs?\n}");

/***/ }),

/***/ "./src/api/Tracks.ts":
/*!***************************!*\
  !*** ./src/api/Tracks.ts ***!
  \***************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.deleteFavorites = exports.addFavorites = exports.getFavorites = exports.fetchTracks = void 0;\nconst Users_1 = __webpack_require__(/*! ./Users */ \"./src/api/Users.ts\");\nconst checkAuth_1 = __webpack_require__(/*! ../view/comps/checkAuth */ \"./src/view/comps/checkAuth.ts\");\nconst axios_1 = __webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\");\nconst fetchTracks = (token) => {\n    return axios_1.default.get(`${Users_1.apiURL}/tracks`, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then((response) => {\n        const data = response.data;\n        console.log(data);\n        return data;\n    })\n        .catch((error) => {\n        if (error.response) {\n            alertUser();\n            return error.response.data;\n        }\n        throw error;\n    });\n};\nexports.fetchTracks = fetchTracks;\nconst getFavorites = (token) => {\n    return axios_1.default.get(`${Users_1.apiURL}/favorites`, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n        }\n    })\n        .then((response) => {\n        const data = response.data;\n        console.log(data);\n        const storage = localStorage.getItem('user');\n        const storageData = JSON.parse(storage);\n        const newDataStorage = Object.assign(Object.assign({}, storageData), { favorites: data });\n        localStorage.setItem('user', JSON.stringify(newDataStorage));\n        const tracksWithDates = data.map((favTrack) => (Object.assign(Object.assign({}, favTrack), { addedAt: formatDate(new Date()) })));\n        return tracksWithDates;\n    })\n        .catch((error) => {\n        if (error.response) {\n            alertUser();\n            return error.response.message;\n        }\n        throw error;\n    });\n};\nexports.getFavorites = getFavorites;\nconst addFavorites = (token, id) => {\n    return axios_1.default.post(`${Users_1.apiURL}/favorites`, {\n        trackId: id,\n    }, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then((response) => {\n        return response.data;\n    })\n        .catch((error) => {\n        console.error(error);\n        return { message: 'ошибка добавления' };\n    });\n};\nexports.addFavorites = addFavorites;\nconst deleteFavorites = (token, id) => {\n    return axios_1.default.delete(`${Users_1.apiURL}/favorites`, {\n        headers: {\n            'Authorization': `Bearer ${token}`,\n            \"Content-Type\": \"application/json\",\n        },\n        data: {\n            trackId: id\n        }\n    })\n        .then((response) => {\n        return response.data;\n    })\n        .catch((error) => {\n        console.error(error);\n        return { message: 'ошибка удаления' };\n    });\n};\nexports.deleteFavorites = deleteFavorites;\nconst formatDate = (date) => {\n    const daysBetween = new Date().getDate() - date.getDate();\n    switch (daysBetween) {\n        case 0:\n            return 'сегодня';\n            // removed by dead control flow\n{}\n        default:\n            return `${daysBetween} дней назад`;\n            // removed by dead control flow\n{}\n    }\n};\nconst alertUser = () => {\n    localStorage.removeItem('user');\n    (0, checkAuth_1.checkAuth)();\n    alert('Токен устарел, необходимо обновить авторизацию');\n};\n\n\n//# sourceURL=webpack://frontend/./src/api/Tracks.ts?\n}");

/***/ }),

/***/ "./src/api/Users.ts":
/*!**************************!*\
  !*** ./src/api/Users.ts ***!
  \**************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.authUser = exports.apiURL = exports.baseURL = void 0;\nconst axios_1 = __webpack_require__(/*! axios */ \"./node_modules/axios/dist/browser/axios.cjs\");\nexports.baseURL = `http://localhost:8000`;\nexports.apiURL = `${exports.baseURL}/api`;\nconst authUser = (url, name, password) => {\n    const obj = {\n        username: name,\n        password: password\n    };\n    return axios_1.default.post(`${exports.apiURL}${url}`, obj, {\n        headers: {\n            'Content-Type': \"application/json\",\n        }\n    })\n        .then((response) => {\n        const data = response.data;\n        if ('user' in data) {\n            const regData = {\n                user: { username: data.user.username },\n                message: data.message\n            };\n            return regData;\n        }\n        else {\n            const logData = {\n                token: data.token,\n                message: data.message\n            };\n            const dataLocal = {\n                token: data.token,\n                username: name\n            };\n            localStorage.setItem('user', JSON.stringify(dataLocal));\n            return logData;\n        }\n    })\n        .catch((error) => {\n        if (error.response) {\n            return error.response.data;\n        }\n        throw error;\n    });\n};\nexports.authUser = authUser;\n\n\n//# sourceURL=webpack://frontend/./src/api/Users.ts?\n}");

/***/ }),

/***/ "./src/view/comps/HandlerAside.ts":
/*!****************************************!*\
  !*** ./src/view/comps/HandlerAside.ts ***!
  \****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.handlerTracksInp = exports.handlerFavoriteInp = void 0;\nconst accountCard_1 = __webpack_require__(/*! ../elems/accountCard */ \"./src/view/elems/accountCard.ts\");\nconst navigate_1 = __webpack_require__(/*! ./navigate */ \"./src/view/comps/navigate.ts\");\nconst favoriteBtn = document.getElementById(\"inp-favorite\");\nconst tracksBtn = document.getElementById(\"inp-tracks\");\nconst labelFavorite = favoriteBtn.parentElement;\nconst labelTracks = tracksBtn.parentElement;\nconst inputFilter = document.getElementById(\"search-inp\");\nconst handlerFavoriteInp = () => __awaiter(void 0, void 0, void 0, function* () {\n    favoriteBtn.checked = true;\n    tracksBtn.checked = false;\n    labelFavorite.classList.add(\"radio-active\");\n    labelTracks.classList.remove(\"radio-active\");\n    inputFilter.value = \"\";\n    (0, accountCard_1.removeAccountSettings)();\n    (0, navigate_1.navigate)(favoriteBtn.value);\n});\nexports.handlerFavoriteInp = handlerFavoriteInp;\nconst handlerTracksInp = () => __awaiter(void 0, void 0, void 0, function* () {\n    tracksBtn.checked = true;\n    favoriteBtn.checked = false;\n    labelTracks.classList.add(\"radio-active\");\n    labelFavorite.classList.remove(\"radio-active\");\n    inputFilter.value = \"\";\n    (0, accountCard_1.removeAccountSettings)();\n    (0, navigate_1.navigate)(tracksBtn.value);\n});\nexports.handlerTracksInp = handlerTracksInp;\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/HandlerAside.ts?\n}");

/***/ }),

/***/ "./src/view/comps/HandlerAuth.ts":
/*!***************************************!*\
  !*** ./src/view/comps/HandlerAuth.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AuthHandler = AuthHandler;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst loginCard_1 = __webpack_require__(/*! ../elems/loginCard */ \"./src/view/elems/loginCard.ts\");\nconst regCard_1 = __webpack_require__(/*! ../elems/regCard */ \"./src/view/elems/regCard.ts\");\nconst homeCard_1 = __webpack_require__(/*! ../elems/homeCard */ \"./src/view/elems/homeCard.ts\");\nfunction AuthHandler() {\n    const buttonReg = (0, redom_1.el)('button.button__auth#reg-button', 'Регистрация');\n    const buttonLogin = (0, redom_1.el)('button.button__auth#log-button', 'Авторизация');\n    const buttonEnter = (0, redom_1.el)('button.button__auth#submit-button', 'Войти', { type: 'submit', disabled: true });\n    const initialBtnGroup = (0, redom_1.el)('.auth__btn', [buttonReg, buttonLogin]);\n    (0, homeCard_1.HomeCard)(initialBtnGroup);\n    buttonLogin === null || buttonLogin === void 0 ? void 0 : buttonLogin.addEventListener('click', () => {\n        var _a;\n        (_a = document.querySelector('#auth')) === null || _a === void 0 ? void 0 : _a.remove();\n        const title = 'Авторизация';\n        const btnGroup = (0, redom_1.el)('.auth__btn', [buttonEnter, buttonReg]);\n        (0, loginCard_1.LoginCard)(title, btnGroup);\n    });\n    buttonReg === null || buttonReg === void 0 ? void 0 : buttonReg.addEventListener('click', () => {\n        var _a;\n        (_a = document.querySelector('#auth')) === null || _a === void 0 ? void 0 : _a.remove();\n        const title = 'Регистрация';\n        const btnGroup = (0, redom_1.el)('.auth__btn', [buttonEnter, buttonLogin]);\n        (0, regCard_1.RegCard)(title, btnGroup);\n    });\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/HandlerAuth.ts?\n}");

/***/ }),

/***/ "./src/view/comps/HandlerFilter.ts":
/*!*****************************************!*\
  !*** ./src/view/comps/HandlerFilter.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HandlerFilter = void 0;\nconst showListTrack_1 = __webpack_require__(/*! ./showListTrack */ \"./src/view/comps/showListTrack.ts\");\nconst tableBody = document.getElementById('table-body');\nconst HandlerFilter = (event, data, favorite) => {\n    const target = event.target;\n    const searchValue = target.value.trim();\n    tableBody.innerHTML = '';\n    let filteredData = [];\n    if (!searchValue) {\n        filteredData = data;\n    }\n    else {\n        filteredData = data.filter(track => track.title.toLocaleLowerCase().includes(searchValue.toLowerCase()) ||\n            track.artist.toLocaleLowerCase().includes(searchValue.toLowerCase()));\n    }\n    (0, showListTrack_1.showListTracks)(filteredData, favorite);\n};\nexports.HandlerFilter = HandlerFilter;\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/HandlerFilter.ts?\n}");

/***/ }),

/***/ "./src/view/comps/HandlerList.ts":
/*!***************************************!*\
  !*** ./src/view/comps/HandlerList.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.handlerBtnFavoriteItem = void 0;\nconst Tracks_1 = __webpack_require__(/*! ../../api/Tracks */ \"./src/api/Tracks.ts\");\nconst handlerBtnFavoriteItem = (event) => __awaiter(void 0, void 0, void 0, function* () {\n    event.stopPropagation();\n    let noticeTimer;\n    const target = event.target;\n    const userAuth = localStorage.getItem('user');\n    const localInfo = JSON.parse(userAuth);\n    const btnGroup = target.parentElement;\n    const deleteNotice = btnGroup.querySelector('.delete-btn');\n    const player = document.querySelector('.player');\n    const btnFavoritePlayer = document.getElementById('btn-favorite-player');\n    if (target.classList.contains('active')) {\n        //удаление\n        deleteNotice.style.display = 'block';\n        noticeTimer = setTimeout(() => {\n            deleteNotice.style.display = 'none';\n            clearTimeout(noticeTimer);\n        }, 900);\n        target.classList.toggle('active');\n        yield (0, Tracks_1.deleteFavorites)(localInfo.token, +target.id);\n        if (player && target.id === btnFavoritePlayer.dataset.id)\n            btnFavoritePlayer.classList.toggle('active');\n    }\n    else {\n        //добавление\n        target.classList.toggle('active');\n        if (player && target.id === btnFavoritePlayer.dataset.id)\n            btnFavoritePlayer.classList.toggle('active');\n        yield (0, Tracks_1.addFavorites)(localInfo.token, +target.id);\n    }\n});\nexports.handlerBtnFavoriteItem = handlerBtnFavoriteItem;\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/HandlerList.ts?\n}");

/***/ }),

/***/ "./src/view/comps/HandlerPlayer.ts":
/*!*****************************************!*\
  !*** ./src/view/comps/HandlerPlayer.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.handlerPlayer = exports.onRepeat = exports.prevTrack = exports.nextTrack = exports.onShuffle = exports.shuffleArray = exports.onPlay = exports.onChangeVolume = exports.onChangeTrack = exports.handlerBtnFavoritePlayer = exports.onClickListTrack = exports.currentOriginIndex = exports.currentShuffledIndex = exports.isRepeat = exports.isShuffle = exports.shuffledData = exports.startPosition = exports.timerProgress = void 0;\nexports.editDurationTime = editDurationTime;\nexports.setTimer = setTimer;\nexports.onPause = onPause;\nexports.setValuesOnPlayer = setValuesOnPlayer;\nexports.resetPlayerState = resetPlayerState;\nconst player_1 = __webpack_require__(/*! ../elems/player */ \"./src/view/elems/player.ts\");\nconst Tracks_1 = __webpack_require__(/*! ../../api/Tracks */ \"./src/api/Tracks.ts\");\nconst showListTrack_1 = __webpack_require__(/*! ./showListTrack */ \"./src/view/comps/showListTrack.ts\");\nexports.isShuffle = false;\nexports.isRepeat = false;\nexports.currentShuffledIndex = 0;\nfunction editDurationTime(time) {\n    const minutes = Math.floor(time);\n    const secondsSlice = time % 1;\n    const seconds = Math.round(secondsSlice * 60);\n    return `${minutes}:${seconds < 10 ? `0` + seconds : seconds}`;\n}\n//таймер для прогрессбара \nfunction setTimer(track, valueInp = 0) {\n    let counter = 0;\n    counter = valueInp;\n    exports.timerProgress = setInterval(() => {\n        counter++;\n        if ((counter / 100) >= track.duration) {\n            clearInterval(exports.timerProgress);\n            resetPlayerState(track);\n            !exports.isRepeat ? (0, exports.nextTrack)() : onPause();\n        }\n        else {\n            setValuesOnPlayer(track.duration, counter);\n        }\n    }, 1000);\n    return { timerProgress: exports.timerProgress, counter };\n}\nfunction onPause() {\n    const playBtn = document.querySelector('.player-btn__play');\n    playBtn.classList.remove('player-btn__pause');\n    clearInterval(exports.timerProgress);\n}\nfunction setValuesOnPlayer(timeEnd, value) {\n    const durationStart = document.querySelector('.player-controls__time-from');\n    const durationEnd = document.querySelector('.player-controls__time-to');\n    const trackProgress = document.querySelector('.player-controls__progress-music-top');\n    durationStart.textContent = `${editDurationTime(value / 100)}`;\n    durationEnd.textContent = `${editDurationTime(timeEnd - (value / 100))}`;\n    trackProgress.style.width = `${610 * ((value / 100) / timeEnd)}px`;\n}\n//проверка массива, выбор трека и отрисовка элемента плейлист\nconst onClickListTrack = (data, id) => {\n    const existingPlayer = document.querySelector('.player');\n    if (existingPlayer) {\n        existingPlayer.remove();\n        clearInterval(exports.timerProgress);\n    }\n    let track;\n    if (exports.isShuffle) {\n        track = data[exports.currentShuffledIndex];\n    }\n    else {\n        track = id ? data.find(el => el.id === id) : data[exports.currentOriginIndex];\n        exports.currentOriginIndex = data.indexOf(track);\n    }\n    const binaryStr = atob(track.encoded_audio);\n    console.log('Данные с сервера по треку:', binaryStr);\n    (0, player_1.Player)(track);\n    if (window.innerWidth < 1024) {\n        const tracksWrapper = document.querySelector('.content__tracks');\n        tracksWrapper.style.paddingBottom = '150px';\n        console.log(tracksWrapper);\n    }\n    if (exports.isShuffle) {\n        const shuffleBtn = document.querySelector('.player-btn__shuffle');\n        shuffleBtn.classList.add('shuffle');\n    }\n    return { track };\n};\nexports.onClickListTrack = onClickListTrack;\n//добавить/убрать в избранное на плеере\nconst handlerBtnFavoritePlayer = (id, btn) => __awaiter(void 0, void 0, void 0, function* () {\n    const userAuth = localStorage.getItem('user');\n    const localInfo = JSON.parse(userAuth);\n    const btnFavoritePlayer = document.getElementById('btn-favorite-player');\n    btnFavoritePlayer.classList.toggle('active');\n    if (btnFavoritePlayer.classList.contains('active')) {\n        yield (0, Tracks_1.addFavorites)(localInfo.token, id);\n        if (btn)\n            btn.classList.toggle('active');\n    }\n    else {\n        yield (0, Tracks_1.deleteFavorites)(localInfo.token, id);\n        if (btn)\n            btn.classList.toggle('active');\n    }\n});\nexports.handlerBtnFavoritePlayer = handlerBtnFavoritePlayer;\n//отклик на изменение прогрессбара трека\nconst onChangeTrack = (event, track) => {\n    const target = event.target;\n    const value = +target.value;\n    const newPosition = track.duration * (value / 100); //начальная точка воспроизведения\n    exports.startPosition = Math.floor(newPosition * 100);\n    const playBtn = document.querySelector('.player-btn__play');\n    if (playBtn.classList.contains('player-btn__pause')) {\n        clearInterval(exports.timerProgress);\n        setTimer(track, exports.startPosition);\n    }\n    else {\n        clearInterval(exports.timerProgress);\n        playBtn.classList.remove('player-btn__pause');\n        setValuesOnPlayer(track.duration, exports.startPosition);\n    }\n    return exports.startPosition;\n};\nexports.onChangeTrack = onChangeTrack;\n//кнопка изменения громкости\nconst onChangeVolume = (event) => {\n    const volumeProgress = document.querySelector('.player-controls__progress-volume-top');\n    const circleProgress = document.querySelector('.player-controls__progress-volume-circle');\n    const target = event.target;\n    const value = +target.value;\n    volumeProgress.style.width = `${72 * (value / 100)}px`;\n    circleProgress.style.transform = `translate(${(72 * (value / 100)) + 20}px, 0px)`;\n};\nexports.onChangeVolume = onChangeVolume;\n//кнопка Play/Pause - если пауза, уточняем место остановки \nconst onPlay = (track) => {\n    const playBtn = document.querySelector('.player-btn__play');\n    const durationStart = document.querySelector('.player-controls__time-from');\n    if (playBtn.classList.contains('player-btn__pause')) {\n        onPause();\n    }\n    else {\n        playBtn.classList.add('player-btn__pause');\n        durationStart.textContent === '0:00' ? setTimer(track) : setTimer(track, exports.startPosition);\n    }\n};\nexports.onPlay = onPlay;\n//функция перемешивания\nconst shuffleArray = (array) => {\n    let shuffledArr = [...array];\n    for (let i = shuffledArr.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        [shuffledArr[i], shuffledArr[j]] = [shuffledArr[j], shuffledArr[i]];\n    }\n    return shuffledArr;\n};\nexports.shuffleArray = shuffleArray;\n//установка флага isShuffle, индекса воспроизведения, отрисовка плеера\nconst onShuffle = (data) => {\n    if (!exports.isShuffle) {\n        exports.isShuffle = true;\n        exports.shuffledData = (0, exports.shuffleArray)([...data]);\n        exports.currentShuffledIndex = 0;\n        const firstTrackId = exports.shuffledData[exports.currentShuffledIndex].id;\n        (0, exports.handlerPlayer)(exports.shuffledData, firstTrackId);\n    }\n    else {\n        exports.isShuffle = false;\n        const currentTrack = exports.shuffledData[exports.currentShuffledIndex];\n        exports.currentOriginIndex = showListTrack_1.originData.indexOf(currentTrack);\n        const originTrackId = showListTrack_1.originData[exports.currentOriginIndex].id;\n        (0, exports.handlerPlayer)(showListTrack_1.originData, originTrackId);\n    }\n};\nexports.onShuffle = onShuffle;\n//по массиву ищет следующий индекс элемента и рисует новый плеер \nconst nextTrack = () => {\n    const sourceData = exports.isShuffle ? exports.shuffledData : showListTrack_1.originData;\n    let nextIndex;\n    //круговое движение\n    if (exports.isShuffle) {\n        nextIndex = (exports.currentShuffledIndex + 1) % sourceData.length;\n        exports.currentShuffledIndex = nextIndex;\n    }\n    else {\n        nextIndex = (exports.currentOriginIndex + 1) % sourceData.length;\n        exports.currentOriginIndex = nextIndex;\n    }\n    const nextTrack = sourceData[nextIndex];\n    (0, exports.handlerPlayer)(sourceData, nextTrack.id);\n};\nexports.nextTrack = nextTrack;\n//по массиву ищет предыдущий индекс элемента и рисует новый плеер \nconst prevTrack = (data) => {\n    const sourceData = exports.isShuffle ? exports.shuffledData : data;\n    let prevIndex;\n    //круговое движение\n    if (exports.isShuffle) {\n        prevIndex = (exports.currentShuffledIndex - 1 + sourceData.length) % sourceData.length;\n        exports.currentShuffledIndex = prevIndex;\n    }\n    else {\n        prevIndex = (exports.currentOriginIndex - 1 + sourceData.length) % sourceData.length;\n        exports.currentOriginIndex = prevIndex;\n    }\n    const prevItem = sourceData[prevIndex];\n    (0, exports.handlerPlayer)(sourceData, prevItem.id);\n};\nexports.prevTrack = prevTrack;\nconst onRepeat = (track) => {\n    exports.isRepeat = true;\n    const repeatBtn = document.querySelector('.player-btn__repeat');\n    repeatBtn.classList.add('repeat');\n};\nexports.onRepeat = onRepeat;\nfunction resetPlayerState(track) {\n    const trackProgress = document.querySelector('.player-controls__progress-music-top');\n    const volumeProgress = document.querySelector('.player-controls__progress-volume-top');\n    const circleProgress = document.querySelector('.player-controls__progress-volume-circle');\n    trackProgress.style.width = `0px`;\n    volumeProgress.style.width = `30px`;\n    circleProgress.style.transform = `translate(50px, 0px)`;\n    const durationStart = document.querySelector('.player-controls__time-from');\n    const durationEnd = document.querySelector('.player-controls__time-to');\n    durationStart.textContent = '0:00';\n    durationEnd.textContent = `${editDurationTime(track.duration)}`;\n}\n//отрисовка плеера в зависимости от массива и id + обработчики\nconst handlerPlayer = (data, id) => {\n    const { track } = (0, exports.onClickListTrack)(data, id);\n    resetPlayerState(track);\n    const btnFavoritePlayer = document.getElementById('btn-favorite-player');\n    const trackProgressInp = document.querySelector('.player-controls__progress-inp');\n    const volumeProgressInp = document.querySelector('.player-controls__progress-inp-volume');\n    const shuffleBtn = document.querySelector('.player-btn__shuffle');\n    const prevBtn = document.querySelector('.player-btn__prev');\n    const playBtn = document.querySelector('.player-btn__play');\n    const nextBtn = document.querySelector('.player-btn__next');\n    const repeatBtn = document.querySelector('.player-btn__repeat');\n    const btnFavoriteListOnScreen = document.querySelectorAll('.content__table__button--favorite');\n    let foundItem = [...btnFavoriteListOnScreen].find((el) => +el.id === track.id);\n    if (foundItem) {\n        //на отображаемой странице\n        btnFavoritePlayer.addEventListener('click', () => __awaiter(void 0, void 0, void 0, function* () { return (0, exports.handlerBtnFavoritePlayer)(track.id, foundItem); }));\n        if (foundItem.classList.contains('active'))\n            btnFavoritePlayer.classList.add('active');\n    }\n    else {\n        btnFavoritePlayer.addEventListener('click', () => __awaiter(void 0, void 0, void 0, function* () { return (0, exports.handlerBtnFavoritePlayer)(track.id); }));\n    }\n    trackProgressInp.addEventListener('change', (event) => (0, exports.onChangeTrack)(event, track));\n    volumeProgressInp.addEventListener('change', (event) => (0, exports.onChangeVolume)(event));\n    playBtn === null || playBtn === void 0 ? void 0 : playBtn.addEventListener('click', () => (0, exports.onPlay)(track));\n    nextBtn === null || nextBtn === void 0 ? void 0 : nextBtn.addEventListener('click', () => (0, exports.nextTrack)());\n    prevBtn === null || prevBtn === void 0 ? void 0 : prevBtn.addEventListener('click', () => (0, exports.prevTrack)(data));\n    shuffleBtn === null || shuffleBtn === void 0 ? void 0 : shuffleBtn.addEventListener('click', () => (0, exports.onShuffle)(data));\n    repeatBtn === null || repeatBtn === void 0 ? void 0 : repeatBtn.addEventListener('click', () => (0, exports.onRepeat)(track));\n};\nexports.handlerPlayer = handlerPlayer;\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/HandlerPlayer.ts?\n}");

/***/ }),

/***/ "./src/view/comps/account.ts":
/*!***********************************!*\
  !*** ./src/view/comps/account.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Account = void 0;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst checkAuth_1 = __webpack_require__(/*! ./checkAuth */ \"./src/view/comps/checkAuth.ts\");\nconst Account = (username) => {\n    var _a;\n    const storage = localStorage.getItem('user');\n    const storageInfo = JSON.parse(storage);\n    const table = document.querySelector('.content__main');\n    const headerButton = document.querySelector('#header-account');\n    const title = (0, redom_1.el)('h2.account-title', 'Личный кабинет');\n    const loginPerson = (0, redom_1.el)('h3.account-login', `Ваш логин: ${username}`);\n    const btnAvatar = (0, redom_1.el)('button.account-btn');\n    const avatarDefault = document.querySelector('.header__user-none');\n    const input = (0, redom_1.el)('input#inp_image.account_inp', { type: 'file', accept: \"image/*\" });\n    const image = (0, redom_1.el)('img#image.account_image');\n    const inputWrapper = (0, redom_1.el)('.account-select', [btnAvatar, input]);\n    const btnExit = (0, redom_1.el)('button.account-btn.account-btn__exit', 'Выйти из приложения');\n    const accountWrapper = (0, redom_1.el)('.content__account', [title, (0, redom_1.el)('.account', [inputWrapper, loginPerson, btnExit])]);\n    (_a = table.firstElementChild) === null || _a === void 0 ? void 0 : _a.appendChild(accountWrapper);\n    if (avatarDefault)\n        btnAvatar.textContent = 'Добавить аватар';\n    if (storageInfo.avatarUrl) {\n        image.src = storageInfo.avatarUrl;\n        document.querySelector('.account').prepend(image);\n        btnAvatar.textContent = 'Обновить аватар';\n    }\n    input.addEventListener('change', () => __awaiter(void 0, void 0, void 0, function* () {\n        if (input.files && input.files.length > 0) {\n            const file = input.files[0];\n            const path = URL.createObjectURL(file);\n            const compressedImage = yield resizeImg(path);\n            image.src = compressedImage;\n            document.querySelector('.account').prepend(image);\n            const updatedUser = Object.assign(Object.assign({}, JSON.parse(storage)), { avatarUrl: compressedImage });\n            localStorage.setItem('user', JSON.stringify(updatedUser));\n            const newHeaderIcon = (0, redom_1.el)('img.header__user-img');\n            newHeaderIcon.src = image.src;\n            avatarDefault === null || avatarDefault === void 0 ? void 0 : avatarDefault.remove();\n            btnAvatar.textContent = 'Обновить аватар';\n            const headerAccountIcon = headerButton.querySelector('.header__user-img');\n            if (headerAccountIcon)\n                headerAccountIcon.remove();\n            headerButton === null || headerButton === void 0 ? void 0 : headerButton.prepend(newHeaderIcon);\n        }\n    }));\n    btnExit.addEventListener('click', () => {\n        localStorage.removeItem('user');\n        (0, checkAuth_1.checkAuth)();\n    });\n};\nexports.Account = Account;\nfunction resizeImg(path) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const img = new Image();\n        img.src = path;\n        yield new Promise(resolve => img.onload = resolve);\n        const newWidth = img.naturalWidth * 0.3;\n        const newHeight = img.naturalHeight * 0.3;\n        const canvas = document.createElement('canvas');\n        canvas.width = newWidth;\n        canvas.height = newHeight;\n        const ctx = canvas.getContext('2d');\n        ctx === null || ctx === void 0 ? void 0 : ctx.drawImage(img, 0, 0, newWidth, newHeight);\n        const compressedImage = canvas.toDataURL('image/jpeg', 0.3);\n        URL.revokeObjectURL(path);\n        return compressedImage;\n    });\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/account.ts?\n}");

/***/ }),

/***/ "./src/view/comps/checkAuth.ts":
/*!*************************************!*\
  !*** ./src/view/comps/checkAuth.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.checkAuth = checkAuth;\nconst accountCard_1 = __webpack_require__(/*! ../elems/accountCard */ \"./src/view/elems/accountCard.ts\");\nconst HandlerAuth_1 = __webpack_require__(/*! ./HandlerAuth */ \"./src/view/comps/HandlerAuth.ts\");\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst HandlerAside_1 = __webpack_require__(/*! ./HandlerAside */ \"./src/view/comps/HandlerAside.ts\");\nconst navigate_1 = __webpack_require__(/*! ./navigate */ \"./src/view/comps/navigate.ts\");\nfunction checkAuth() {\n    return __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        const userAuth = localStorage.getItem('user');\n        if (userAuth) {\n            //настройка приложения\n            document.getElementById('app-main').style.display = 'block';\n            const localInfo = JSON.parse(userAuth);\n            const name = localInfo.username;\n            const username = document.querySelector('.header__user-name');\n            username.textContent = name;\n            const avatar = localInfo.avatarUrl;\n            if (avatar) {\n                const headerButton = document.querySelector('#header-account');\n                const avatarDefault = document.querySelector('.header__user-none');\n                const newAvatar = (0, redom_1.el)('img.header__user-img');\n                newAvatar.src = avatar;\n                avatarDefault === null || avatarDefault === void 0 ? void 0 : avatarDefault.remove();\n                headerButton === null || headerButton === void 0 ? void 0 : headerButton.prepend(newAvatar);\n            }\n            const accountBtn = document.getElementById('header-account');\n            const favoriteBtn = document.getElementById('inp-favorite');\n            const tracksBtn = document.getElementById('inp-tracks');\n            if (document.querySelector('.radio-active'))\n                (_a = document.querySelector('radio-active')) === null || _a === void 0 ? void 0 : _a.classList.remove('radio-active');\n            (0, navigate_1.navigate)(tracksBtn.value);\n            accountBtn.addEventListener('click', () => (0, accountCard_1.AccountCard)(name));\n            favoriteBtn.addEventListener('click', () => __awaiter(this, void 0, void 0, function* () { return (0, HandlerAside_1.handlerFavoriteInp)(); }));\n            tracksBtn.addEventListener('click', () => __awaiter(this, void 0, void 0, function* () { return (0, HandlerAside_1.handlerTracksInp)(); }));\n        }\n        else {\n            const app = document.getElementById('app-main');\n            app.style.display = 'none';\n            (0, HandlerAuth_1.AuthHandler)();\n        }\n    });\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/checkAuth.ts?\n}");

/***/ }),

/***/ "./src/view/comps/navigate.ts":
/*!************************************!*\
  !*** ./src/view/comps/navigate.ts ***!
  \************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.navigate = navigate;\nfunction navigate(cardName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const userAuth = localStorage.getItem('user');\n        const userToken = JSON.parse(userAuth).token;\n        const player = document.querySelector('.player');\n        if (player)\n            player.remove();\n        switch (cardName) {\n            case 'favorite':\n                const favoriteCard = yield Promise.resolve().then(() => __webpack_require__(/*! ../elems/favoriteTracksCard */ \"./src/view/elems/favoriteTracksCard.ts\"));\n                favoriteCard.default(userToken);\n                break;\n            default:\n                const tracksCard = yield Promise.resolve().then(() => __webpack_require__(/*! ../elems/allTracksCard */ \"./src/view/elems/allTracksCard.ts\"));\n                tracksCard.default(userToken);\n                const tracksBtn = document.getElementById('inp-tracks');\n                const labelTracks = tracksBtn.parentElement;\n                labelTracks.classList.add('radio-active');\n        }\n    });\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/navigate.ts?\n}");

/***/ }),

/***/ "./src/view/comps/showListTrack.ts":
/*!*****************************************!*\
  !*** ./src/view/comps/showListTrack.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.originData = void 0;\nexports.showListTracks = showListTracks;\nexports.renderTracks = renderTracks;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst HandlerList_1 = __webpack_require__(/*! ../comps/HandlerList */ \"./src/view/comps/HandlerList.ts\");\nconst HandlerPlayer_1 = __webpack_require__(/*! ../comps/HandlerPlayer */ \"./src/view/comps/HandlerPlayer.ts\");\nconst updateDataList_1 = __webpack_require__(/*! ./updateDataList */ \"./src/view/comps/updateDataList.ts\");\nexports.originData = [];\nlet startPage = 1;\nlet combinedArr = [];\nconst tableBody = document.getElementById('table-body');\nconst headTable = document.querySelector('thead');\nconst contentTracks = document.querySelector('.content__tracks');\nfunction showListTracks(data, favorite) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const windowWidth = window.innerWidth;\n        tableBody.innerHTML = '';\n        const paginationEl = document.querySelector('.content__table__pagination');\n        if (paginationEl)\n            paginationEl.remove();\n        const initialData = data.slice(0, 10);\n        yield renderTracks(initialData, favorite);\n        exports.originData = data;\n        const theadDate = document.getElementById('add-date');\n        favorite ? theadDate.style.display = 'table-cell' : theadDate.style.display = 'none';\n        if (windowWidth >= 1024) {\n            createPaginationList(data, favorite);\n        }\n        else {\n            combinedArr = combinedArr.concat(initialData);\n            window.addEventListener('scroll', (e) => lazyLoad(favorite, combinedArr));\n        }\n    });\n}\nfunction createPaginationList(tracks, favoriteFlag) {\n    const pagesCount = getPagesCount(tracks);\n    if (pagesCount > 1) {\n        const paginationWrapper = (0, redom_1.el)('.content__table__pagination');\n        for (let i = 1; i <= pagesCount; i++) {\n            const arrowBtn = (0, redom_1.el)('button.content__table__arrow-btn', i);\n            paginationWrapper.appendChild(arrowBtn);\n        }\n        contentTracks.append(paginationWrapper);\n        document.querySelector('.content__table__arrow-btn').classList.add('active-pagination');\n        const paginationBtns = document.querySelectorAll('.content__table__arrow-btn');\n        paginationBtns.forEach((btn, index) => btn.addEventListener('click', () => {\n            const newArr = pagination(index + 1, tracks);\n            renderTracks(newArr, favoriteFlag);\n            const currentActive = document.querySelector('.active-pagination');\n            if (currentActive)\n                currentActive.classList.remove('active-pagination');\n            btn.classList.add('active-pagination');\n        }));\n    }\n}\nfunction renderTracks(tracks, favoriteFlag) {\n    return __awaiter(this, void 0, void 0, function* () {\n        tableBody.innerHTML = '';\n        headTable.style.display = 'table-header-group';\n        const userAuth = localStorage.getItem('user');\n        const localInfo = JSON.parse(userAuth).favorites || [];\n        if (tracks.length > 0) {\n            tracks.forEach(track => {\n                const isActive = favoriteFlag || (localInfo && localInfo.some((favTrack) => favTrack.id === track.id));\n                const row = (0, redom_1.el)('tr.content__table__row', { 'data-id': track.id }, [\n                    (0, redom_1.el)('td.content__table__item.content__table__item--num', track.id),\n                    (0, redom_1.el)('td.content__table__item', (0, redom_1.el)('.content__table__wrap', [\n                        (0, redom_1.el)('span.content__table__item--title', track.title), (0, redom_1.el)('span.content__table__item--descr', track.artist)\n                    ])),\n                    (0, redom_1.el)(`td.content__table__item.content__table__item--date ${favoriteFlag ? '' : 'hidden'}`, track.addedAt),\n                    (0, redom_1.el)('td.content__table__item content__table__item--btn-group', [\n                        (0, redom_1.el)(`button.content__table__button.content__table__button--favorite ${isActive ? 'active' : ''}#${track.id}`),\n                        (0, redom_1.el)('span.content__table__duration', (0, HandlerPlayer_1.editDurationTime)(track.duration)),\n                        (0, redom_1.el)(`button.content__table__button.content__table__button--setting`),\n                        (0, redom_1.el)(`.delete-btn`, 'Трек удален из избранного')\n                    ])\n                ]);\n                (0, redom_1.mount)(tableBody, row);\n            });\n        }\n        else {\n            headTable.style.display = 'none';\n            (0, updateDataList_1.showEmptyText)(tableBody, headTable, 'Треки по вашему запросу отсутствуют 👀');\n        }\n        const buttonsFav = document.querySelectorAll('.content__table__button--favorite');\n        for (const item of buttonsFav) {\n            item.addEventListener('click', (event) => __awaiter(this, void 0, void 0, function* () { return yield (0, HandlerList_1.handlerBtnFavoriteItem)(event); }));\n        }\n        const tracksOnPage = document.querySelectorAll('.content__table__row');\n        tracksOnPage.forEach((item) => {\n            item.addEventListener('click', () => {\n                (0, HandlerPlayer_1.handlerPlayer)(exports.originData, +item.dataset.id);\n            });\n        });\n    });\n}\nfunction pagination(currentPage, arr) {\n    const itemsPerPage = 10;\n    const lastIndex = currentPage * itemsPerPage;\n    const firstIndex = lastIndex - itemsPerPage;\n    const newArr = arr.slice(firstIndex, lastIndex);\n    return newArr;\n}\nfunction getPagesCount(arr) {\n    const itemsPerPage = 10;\n    const remainder = arr.length % itemsPerPage;\n    const pagesCount = remainder === 0 ? Math.floor(arr.length / itemsPerPage) : (arr.length / itemsPerPage + 1);\n    return pagesCount;\n}\nfunction lazyLoad(favorite, arr) {\n    const scrollY = window.scrollY;\n    const innerHeight = window.innerHeight;\n    const totalHeight = document.documentElement.scrollHeight;\n    //коэф близости к нижней границе\n    const threshold = 0.9;\n    const lowHeight = scrollY + innerHeight;\n    const total = totalHeight * threshold;\n    const totalPage = getPagesCount(exports.originData);\n    if (lowHeight >= total && startPage <= totalPage) {\n        startPage++;\n        loadMoreItems(startPage, favorite, arr);\n    }\n    return startPage;\n}\nfunction loadMoreItems(newPage, favorite, arr) {\n    const newArr = pagination(newPage, exports.originData);\n    if (newArr.length > 0) {\n        // Добавляем новые элементы к существующим\n        combinedArr = arr.concat(newArr);\n        renderTracks(combinedArr, favorite);\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/showListTrack.ts?\n}");

/***/ }),

/***/ "./src/view/comps/updateDataList.ts":
/*!******************************************!*\
  !*** ./src/view/comps/updateDataList.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.showEmptyText = showEmptyText;\nexports.removeEmptyText = removeEmptyText;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nfunction showEmptyText(parent, child, notice) {\n    child.style.display = 'none';\n    const text = (0, redom_1.el)('h3.text-none', notice);\n    parent.prepend(text);\n}\nfunction removeEmptyText(parent, child) {\n    const emptyText = parent.querySelector('.text-none');\n    if (emptyText) {\n        emptyText.remove();\n        child.style.display = 'table-header-group';\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/comps/updateDataList.ts?\n}");

/***/ }),

/***/ "./src/view/elems/accountCard.ts":
/*!***************************************!*\
  !*** ./src/view/elems/accountCard.ts ***!
  \***************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.AccountCard = void 0;\nexports.removeAccountSettings = removeAccountSettings;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst account_1 = __webpack_require__(/*! ../comps/account */ \"./src/view/comps/account.ts\");\nconst HandlerAside_1 = __webpack_require__(/*! ../comps/HandlerAside */ \"./src/view/comps/HandlerAside.ts\");\nconst table = document.querySelector('.content__main');\nconst AccountCard = (username) => {\n    var _a;\n    const contentTracks = document.querySelector('.content__tracks');\n    const filterInput = document.querySelector('.header__label');\n    const headerContainer = document.querySelector('.header-container');\n    const previousAccount = document.querySelector('.content__account');\n    if (previousAccount)\n        previousAccount.remove();\n    table.style.backgroundColor = 'white';\n    contentTracks.style.display = 'none';\n    filterInput.style.display = 'none';\n    const asideBtn = document.querySelector('.radio-active');\n    asideBtn === null || asideBtn === void 0 ? void 0 : asideBtn.classList.remove('radio-active');\n    (0, account_1.Account)(username);\n    if (document.querySelector(\".account-btn-return\"))\n        (_a = document.querySelector(\".account-btn-return\")) === null || _a === void 0 ? void 0 : _a.remove();\n    const btnReturn = (0, redom_1.el)('button.account-btn-return', 'Вернуться к списку треков');\n    headerContainer === null || headerContainer === void 0 ? void 0 : headerContainer.prepend(btnReturn);\n    btnReturn.addEventListener('click', () => __awaiter(void 0, void 0, void 0, function* () {\n        (0, HandlerAside_1.handlerTracksInp)();\n        removeAccountSettings();\n    }));\n};\nexports.AccountCard = AccountCard;\nfunction removeAccountSettings() {\n    var _a;\n    const contentTracks = document.querySelector('.content__tracks');\n    const filterInput = document.querySelector('.header__label');\n    const btnReturn = document.querySelector('.account-btn-return');\n    contentTracks.style.display = 'block';\n    (_a = document.querySelector('.content__account')) === null || _a === void 0 ? void 0 : _a.remove();\n    filterInput.style.display = 'flex';\n    btnReturn === null || btnReturn === void 0 ? void 0 : btnReturn.remove();\n    table.style.backgroundColor = 'initial';\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/accountCard.ts?\n}");

/***/ }),

/***/ "./src/view/elems/allTracksCard.ts":
/*!*****************************************!*\
  !*** ./src/view/elems/allTracksCard.ts ***!
  \*****************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst Tracks_1 = __webpack_require__(/*! ../../api/Tracks */ \"./src/api/Tracks.ts\");\nconst showListTrack_1 = __webpack_require__(/*! ../comps/showListTrack */ \"./src/view/comps/showListTrack.ts\");\nconst updateDataList_1 = __webpack_require__(/*! ../comps/updateDataList */ \"./src/view/comps/updateDataList.ts\");\nconst HandlerFilter_1 = __webpack_require__(/*! ../comps/HandlerFilter */ \"./src/view/comps/HandlerFilter.ts\");\nconst allTracksCard = (token) => __awaiter(void 0, void 0, void 0, function* () {\n    let isFavorite = false;\n    const allData = yield (0, Tracks_1.fetchTracks)(token);\n    yield (0, Tracks_1.getFavorites)(token);\n    const table = document.querySelector('.content__table');\n    const headTable = document.querySelector('thead');\n    const inputFilter = document.getElementById('search-inp');\n    if (document.querySelector('.text-none'))\n        (0, updateDataList_1.removeEmptyText)(table, headTable);\n    (0, showListTrack_1.showListTracks)(allData, isFavorite);\n    inputFilter.addEventListener('input', (event) => (0, HandlerFilter_1.HandlerFilter)(event, allData, isFavorite));\n    return allData;\n});\nexports[\"default\"] = allTracksCard;\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/allTracksCard.ts?\n}");

/***/ }),

/***/ "./src/view/elems/favoriteTracksCard.ts":
/*!**********************************************!*\
  !*** ./src/view/elems/favoriteTracksCard.ts ***!
  \**********************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst Tracks_1 = __webpack_require__(/*! ../../api/Tracks */ \"./src/api/Tracks.ts\");\nconst updateDataList_1 = __webpack_require__(/*! ../comps/updateDataList */ \"./src/view/comps/updateDataList.ts\");\nconst showListTrack_1 = __webpack_require__(/*! ../comps/showListTrack */ \"./src/view/comps/showListTrack.ts\");\nconst HandlerFilter_1 = __webpack_require__(/*! ../comps/HandlerFilter */ \"./src/view/comps/HandlerFilter.ts\");\nconst favoriteTracksCard = (token) => __awaiter(void 0, void 0, void 0, function* () {\n    let isFavorite = true;\n    const dataFavorites = yield (0, Tracks_1.getFavorites)(token);\n    const table = document.querySelector('.content__table');\n    const headTable = document.querySelector('thead');\n    const inputFilter = document.getElementById('search-inp');\n    const pagination = document.querySelector('.content__table__pagination');\n    if (dataFavorites.length === 0) {\n        const tableBody = document.getElementById('table-body');\n        tableBody.innerHTML = '';\n        (0, updateDataList_1.removeEmptyText)(table, headTable);\n        (0, updateDataList_1.showEmptyText)(table, headTable, 'Здесь пока пусто 😟');\n        if (pagination)\n            pagination.remove();\n    }\n    else {\n        (0, updateDataList_1.removeEmptyText)(table, headTable);\n        (0, showListTrack_1.showListTracks)(dataFavorites, isFavorite);\n        inputFilter.addEventListener('input', (event) => (0, HandlerFilter_1.HandlerFilter)(event, dataFavorites, isFavorite));\n    }\n    return dataFavorites;\n});\nexports[\"default\"] = favoriteTracksCard;\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/favoriteTracksCard.ts?\n}");

/***/ }),

/***/ "./src/view/elems/homeCard.ts":
/*!************************************!*\
  !*** ./src/view/elems/homeCard.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.HomeCard = HomeCard;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nfunction HomeCard(btnGroup) {\n    const titleModal = (0, redom_1.el)('h2.auth__title', `На связи студия подкаста VibeCastStudio 👋🏻`);\n    const descrModal = (0, redom_1.el)('p.auth__notice', 'Слушайте подкасты резидентов студии в аудиоплеере с возможностью формировать свои полки и сохранять в «Избранное» любимые записи 🧡 ');\n    const textModal = (0, redom_1.el)('p.auth__notice', `Уже есть аккаунт?`);\n    const previewModal = (0, redom_1.el)('#auth', [titleModal, descrModal, textModal, btnGroup]);\n    (0, redom_1.mount)(document.body, previewModal);\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/homeCard.ts?\n}");

/***/ }),

/***/ "./src/view/elems/loginCard.ts":
/*!*************************************!*\
  !*** ./src/view/elems/loginCard.ts ***!
  \*************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.LoginCard = LoginCard;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst Users_1 = __webpack_require__(/*! ../../api/Users */ \"./src/api/Users.ts\");\nconst checkAuth_1 = __webpack_require__(/*! ../comps/checkAuth */ \"./src/view/comps/checkAuth.ts\");\nfunction LoginCard(text, btnGroup) {\n    const titleModal = (0, redom_1.el)('h2.auth__title', `${text}`);\n    const inpNameLabel = (0, redom_1.el)('label.auth__label', (0, redom_1.el)('input.auth__input#inp-name', { type: 'text', placeholder: 'Введите логин', name: 'logName' }));\n    const inpPasswordLabel = (0, redom_1.el)('label.auth__label', (0, redom_1.el)('input.auth__input#inp-password', { type: 'password', placeholder: 'Введите пароль', name: 'logPassword' }));\n    const inputs = (0, redom_1.el)('.auth-inpGroup', [inpNameLabel, inpPasswordLabel]);\n    const errMessage = (0, redom_1.el)('p.auth__err.auth__err-none');\n    const formAuth = (0, redom_1.el)('form.auth__form#form-auth', [inputs, btnGroup], { name: 'logForm' });\n    const previewModal = (0, redom_1.el)('#auth', [titleModal, errMessage, formAuth]);\n    (0, redom_1.mount)(document.body, previewModal);\n    formAuth.addEventListener('submit', (e) => __awaiter(this, void 0, void 0, function* () {\n        var _a;\n        e.preventDefault();\n        const result = yield (0, Users_1.authUser)('/login', formAuth.logName.value, formAuth.logPassword.value);\n        if ('token' in result) {\n            if (!errMessage.classList.contains('auth__err-none')) {\n                errMessage.classList.add('auth__err-none');\n            }\n            document.getElementById('auth').remove();\n            (0, checkAuth_1.checkAuth)();\n        }\n        else {\n            errMessage.classList.remove('auth__err-none');\n            previewModal.classList.add('error');\n            errMessage.textContent = `${result.message} 🤫`;\n            (_a = document.getElementById('submit-button')) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'true');\n        }\n    }));\n    document.getElementById('inp-name').oninput = () => checkValues();\n    document.getElementById('inp-password').oninput = () => checkValues();\n    function checkValues() {\n        var _a, _b, _c;\n        if (formAuth.logName.value && formAuth.logPassword.value) {\n            if (previewModal.classList.contains('error')) {\n                errMessage.textContent = '';\n                errMessage.classList.add('auth__err-none');\n                previewModal.classList.remove('error');\n                (_a = document.getElementById('submit-button')) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\n            }\n            else {\n                (_b = document.getElementById('submit-button')) === null || _b === void 0 ? void 0 : _b.removeAttribute('disabled');\n            }\n        }\n        else {\n            (_c = document.getElementById('submit-button')) === null || _c === void 0 ? void 0 : _c.setAttribute('disabled', 'true');\n        }\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/loginCard.ts?\n}");

/***/ }),

/***/ "./src/view/elems/player.ts":
/*!**********************************!*\
  !*** ./src/view/elems/player.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

"use strict";
eval("{\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.Player = Player;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nfunction Player(track) {\n    const playerInfo = (0, redom_1.el)('.player', [\n        (0, redom_1.el)('.player-info', [\n            (0, redom_1.el)('.player-img'),\n            (0, redom_1.el)('.player-descr', [\n                (0, redom_1.el)('.player__wrap', [\n                    (0, redom_1.el)('span.player__title', track.title),\n                    (0, redom_1.el)('button.content__table__button content__table__button--favorite#btn-favorite-player', { 'data-id': track.id })\n                ]),\n                (0, redom_1.el)('.player__artist', track.artist)\n            ]),\n        ]),\n        (0, redom_1.el)('.player-controls', [\n            (0, redom_1.el)('.player-controls__play', [\n                (0, redom_1.el)('button.player-btn__shuffle'),\n                (0, redom_1.el)('button.player-btn__prev'),\n                (0, redom_1.el)('button.player-btn__play'),\n                (0, redom_1.el)('button.player-btn__next'),\n                (0, redom_1.el)('button.player-btn__repeat'),\n            ]),\n            (0, redom_1.el)('.player-controls__progress-bar', [\n                (0, redom_1.el)('span.player-controls__time-from'),\n                (0, redom_1.el)('.player-controls__progress-music'),\n                (0, redom_1.el)('.player-controls__progress-music-top'),\n                (0, redom_1.el)('input.player-controls__progress-inp', { type: 'range', step: '.05' }),\n                (0, redom_1.el)('span.player-controls__time-to'),\n            ]),\n        ]),\n        (0, redom_1.el)('.player-controls__volume-block', [\n            (0, redom_1.el)('.player-controls__volume-img'),\n            (0, redom_1.el)('.player-controls__progress-volume'),\n            (0, redom_1.el)('.player-controls__progress-volume-top'),\n            (0, redom_1.el)('.player-controls__progress-volume-circle'),\n            (0, redom_1.el)('input.player-controls__progress-inp-volume', { type: 'range', step: '.05' }),\n        ]),\n    ]);\n    document.querySelector('#app-main').appendChild(playerInfo);\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/player.ts?\n}");

/***/ }),

/***/ "./src/view/elems/regCard.ts":
/*!***********************************!*\
  !*** ./src/view/elems/regCard.ts ***!
  \***********************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval("{\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.RegCard = RegCard;\nconst redom_1 = __webpack_require__(/*! redom */ \"./node_modules/redom/dist/redom.cjs\");\nconst Users_1 = __webpack_require__(/*! ../../api/Users */ \"./src/api/Users.ts\");\nfunction RegCard(text, btnGroup) {\n    const titleModal = (0, redom_1.el)('h2.auth__title', `${text}`);\n    const inpNameLabel = (0, redom_1.el)('label.auth__label', (0, redom_1.el)('input.auth__input#inp-name', { type: 'text', placeholder: 'Введите логин', name: 'regName' }));\n    const inpPasswordLabel = (0, redom_1.el)('label.auth__label', (0, redom_1.el)('input.auth__input#inp-password', { type: 'password', placeholder: 'Введите пароль', name: 'regPassword' }));\n    const inputs = (0, redom_1.el)('.auth-inpGroup', [inpNameLabel, inpPasswordLabel]);\n    const errMessage = (0, redom_1.el)('p.auth__err.auth__err-none');\n    const formAuth = (0, redom_1.el)('form.auth__form#form-auth', [inputs, btnGroup], { name: 'regForm' });\n    const previewModal = (0, redom_1.el)('#auth', [titleModal, errMessage, formAuth]);\n    (0, redom_1.mount)(document.body, previewModal);\n    formAuth.addEventListener('submit', (e) => __awaiter(this, void 0, void 0, function* () {\n        var _a, _b;\n        e.preventDefault();\n        const result = yield (0, Users_1.authUser)('/register', formAuth.regName.value, formAuth.regPassword.value);\n        if ('user' in result) {\n            errMessage.classList.remove('auth__err-none');\n            errMessage.textContent = `${result.message}, пожалуйста, авторизуйтесь`;\n            (_a = document.getElementById('submit-button')) === null || _a === void 0 ? void 0 : _a.setAttribute('disabled', 'true');\n        }\n        else {\n            errMessage.classList.remove('auth__err-none');\n            previewModal.classList.add('error');\n            errMessage.textContent = `${result.message} 🤫`;\n            (_b = document.getElementById('submit-button')) === null || _b === void 0 ? void 0 : _b.setAttribute('disabled', 'true');\n        }\n    }));\n    document.getElementById('inp-name').oninput = () => checkValues();\n    document.getElementById('inp-password').oninput = () => checkValues();\n    function checkValues() {\n        var _a, _b, _c;\n        if (formAuth.regName.value && formAuth.regPassword.value) {\n            if (previewModal.classList.contains('error')) {\n                errMessage.textContent = '';\n                errMessage.classList.add('auth__err-none');\n                previewModal.classList.remove('error');\n                (_a = document.getElementById('submit-button')) === null || _a === void 0 ? void 0 : _a.removeAttribute('disabled');\n            }\n            else {\n                (_b = document.getElementById('submit-button')) === null || _b === void 0 ? void 0 : _b.removeAttribute('disabled');\n            }\n        }\n        else {\n            (_c = document.getElementById('submit-button')) === null || _c === void 0 ? void 0 : _c.setAttribute('disabled', 'true');\n        }\n    }\n}\n\n\n//# sourceURL=webpack://frontend/./src/view/elems/regCard.ts?\n}");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./index.ts");
/******/ 	
/******/ })()
;